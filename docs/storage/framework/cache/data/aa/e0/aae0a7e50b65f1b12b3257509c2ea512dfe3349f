9999999999s:7206:"<h1>
<a id="user-content-testing" class="anchor" href="#testing" aria-hidden="true"><span aria-hidden="true" class="octicon octicon-link"></span></a>Testing</h1>
<p>Livewire supports 2 styles of testing it's components:</p>
<ol>
<li>Unit testing</li>
<li>End-to-end testing</li>
</ol>
<p>For these demonstrations, we will be using a simple Counter component like the following:</p>
<div title="Component">
<div title="Component__class">
<p>Counter.php</p>
<div class="highlight highlight-text-html-php"><pre><span class="pl-s1"><span class="pl-k">class</span> <span class="pl-en">Counter</span> <span class="pl-k">extends</span> <span class="pl-e">LivewireComponent</span></span>
<span class="pl-s1">{</span>
<span class="pl-s1">    <span class="pl-k">public</span> <span class="pl-smi">$count</span> <span class="pl-k">=</span> <span class="pl-c1">0</span>;</span>
<span class="pl-s1"></span>
<span class="pl-s1">    <span class="pl-k">public</span> <span class="pl-k">function</span> <span class="pl-en">increment</span>()</span>
<span class="pl-s1">    {</span>
<span class="pl-s1">        <span class="pl-smi">$this</span><span class="pl-k">-&gt;</span><span class="pl-smi">count</span><span class="pl-k">++</span>;</span>
<span class="pl-s1">    }</span>
<span class="pl-s1"></span>
<span class="pl-s1">    <span class="pl-k">public</span> <span class="pl-k">function</span> <span class="pl-en">decrement</span>()</span>
<span class="pl-s1">    {</span>
<span class="pl-s1">        <span class="pl-smi">$this</span><span class="pl-k">-&gt;</span><span class="pl-smi">count</span><span class="pl-k">--</span>;</span>
<span class="pl-s1">    }</span>
<span class="pl-s1"></span>
<span class="pl-s1">    <span class="pl-k">public</span> <span class="pl-k">function</span> <span class="pl-en">render</span>()</span>
<span class="pl-s1">    {</span>
<span class="pl-s1">        <span class="pl-k">return</span> view(<span class="pl-s"><span class="pl-pds">'</span>livewire.counter<span class="pl-pds">'</span></span>);</span>
<span class="pl-s1">    }</span>
<span class="pl-s1">}</span></pre></div>
</div>
<div title="Component__view">
<p>counter.blade.php</p>
<div class="highlight highlight-text-html-basic"><pre>&lt;<span class="pl-ent">div</span> <span class="pl-e">style</span>=<span class="pl-s"><span class="pl-pds">"</span><span class="pl-s1"><span class="pl-c1"><span class="pl-c1">text-align</span></span>: <span class="pl-c1">center</span></span><span class="pl-pds">"</span></span>&gt;
    &lt;<span class="pl-ent">button</span> <span class="pl-e">wire:click</span>=<span class="pl-s"><span class="pl-pds">"</span>increment<span class="pl-pds">"</span></span>&gt;+&lt;/<span class="pl-ent">button</span>&gt;
    &lt;<span class="pl-ent">h1</span>&gt;{{ $count }}&lt;/<span class="pl-ent">h1</span>&gt;
    &lt;<span class="pl-ent">button</span> <span class="pl-e">wire:click</span>=<span class="pl-s"><span class="pl-pds">"</span>decrement<span class="pl-pds">"</span></span>&gt;-&lt;/<span class="pl-ent">button</span>&gt;
&lt;/<span class="pl-ent">div</span>&gt;</pre></div>
</div>
</div>
<h2>
<a id="user-content-unit-testing" class="anchor" href="#unit-testing" aria-hidden="true"><span aria-hidden="true" class="octicon octicon-link"></span></a>Unit Testing</h2>
<div class="highlight highlight-text-html-php"><pre><span class="pl-s1"><span class="pl-k">class</span> <span class="pl-en">CounterTest</span> <span class="pl-k">extends</span> <span class="pl-e">TestCase</span></span>
<span class="pl-s1">{</span>
<span class="pl-s1">    <span class="pl-c"><span class="pl-c">/*</span>* @test <span class="pl-c">*/</span></span></span>
<span class="pl-s1">    <span class="pl-k">function</span> <span class="pl-en">can_increment</span>()</span>
<span class="pl-s1">    {</span>
<span class="pl-s1">        <span class="pl-smi">$counter</span> <span class="pl-k">=</span> <span class="pl-c1">Livewire</span><span class="pl-k">::</span>test(<span class="pl-c1">Counter</span><span class="pl-k">::</span><span class="pl-c1">class</span>);</span>
<span class="pl-s1"></span>
<span class="pl-s1">        <span class="pl-smi">$this</span><span class="pl-k">-&gt;</span>assertEquals(<span class="pl-c1">1</span>, <span class="pl-smi">$counter</span><span class="pl-k">-&gt;</span><span class="pl-smi">count</span>);</span>
<span class="pl-s1"></span>
<span class="pl-s1">        <span class="pl-smi">$counter</span><span class="pl-k">-&gt;</span>increment();</span>
<span class="pl-s1"></span>
<span class="pl-s1">        <span class="pl-smi">$this</span><span class="pl-k">-&gt;</span>assertEquals(<span class="pl-c1">2</span>, <span class="pl-smi">$counter</span><span class="pl-k">-&gt;</span><span class="pl-smi">count</span>);</span>
<span class="pl-s1"></span>
<span class="pl-s1">        <span class="pl-smi">$counter</span><span class="pl-k">-&gt;</span>decrement();</span>
<span class="pl-s1"></span>
<span class="pl-s1">        <span class="pl-smi">$this</span><span class="pl-k">-&gt;</span>assertEquals(<span class="pl-c1">1</span>, <span class="pl-smi">$counter</span><span class="pl-k">-&gt;</span><span class="pl-smi">count</span>);</span>
<span class="pl-s1">    }</span>
<span class="pl-s1">}</span></pre></div>
<h2>
<a id="user-content-end-to-end-testing" class="anchor" href="#end-to-end-testing" aria-hidden="true"><span aria-hidden="true" class="octicon octicon-link"></span></a>End-to-end Testing</h2>
<div title="Warning"><div title="Warning__content">
<p>This style of testing is currently under development and likely won't work as expected.</p>
</div></div>
<div class="highlight highlight-text-html-php"><pre><span class="pl-s1"><span class="pl-k">class</span> <span class="pl-en">CounterTest</span> <span class="pl-k">extends</span> <span class="pl-e">TestCase</span></span>
<span class="pl-s1">{</span>
<span class="pl-s1">    <span class="pl-c"><span class="pl-c">/*</span>* @test <span class="pl-c">*/</span></span></span>
<span class="pl-s1">    <span class="pl-k">function</span> <span class="pl-en">can_increment</span>()</span>
<span class="pl-s1">    {</span>
<span class="pl-s1">        <span class="pl-smi">$counter</span> <span class="pl-k">=</span> <span class="pl-c1">Livewire</span><span class="pl-k">::</span>test(<span class="pl-c1">Counter</span><span class="pl-k">::</span><span class="pl-c1">class</span>);</span>
<span class="pl-s1"></span>
<span class="pl-s1">        <span class="pl-smi">$counter</span><span class="pl-k">-&gt;</span>assertSee(<span class="pl-c1">1</span>)</span>
<span class="pl-s1">            <span class="pl-k">-&gt;</span>click(<span class="pl-s"><span class="pl-pds">'</span>[wire:click="increment"]<span class="pl-pds">'</span></span>)</span>
<span class="pl-s1">            <span class="pl-k">-&gt;</span>assertSee(<span class="pl-c1">2</span>)</span>
<span class="pl-s1">            <span class="pl-k">-&gt;</span>click(<span class="pl-s"><span class="pl-pds">'</span>[wire:click="decrement"]<span class="pl-pds">'</span></span>)</span>
<span class="pl-s1">            <span class="pl-k">-&gt;</span>assertSee(<span class="pl-c1">1</span>);</span>
<span class="pl-s1">    }</span>
<span class="pl-s1">}</span></pre></div>
";