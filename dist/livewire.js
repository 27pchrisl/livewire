(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else {
		var a = factory();
		for(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];
	}
})(window, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/js/Component.js":
/*!*****************************!*\
  !*** ./src/js/Component.js ***!
  \*****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Component; });\n/* harmony import */ var _domWalker_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./domWalker.js */ \"./src/js/domWalker.js\");\n/* harmony import */ var _domHelpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./domHelpers */ \"./src/js/domHelpers.js\");\n/* harmony import */ var _morphdom_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./morphdom/index.js */ \"./src/js/morphdom/index.js\");\n/* harmony import */ var _store__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./store */ \"./src/js/store.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\nvar prefix = __webpack_require__(/*! ./prefix.js */ \"./src/js/prefix.js\")();\n\n\n\n\nvar Component =\n/*#__PURE__*/\nfunction () {\n  function Component(el, nodeInitializer, parent) {\n    _classCallCheck(this, Component);\n\n    this.nodeInitializer = nodeInitializer;\n    this.parent = parent;\n    this.id = Object(_domHelpers__WEBPACK_IMPORTED_MODULE_1__[\"getAttribute\"])(el, 'root-id');\n    this.serialized = Object(_domHelpers__WEBPACK_IMPORTED_MODULE_1__[\"getAttribute\"])(el, 'root-serialized');\n  }\n\n  _createClass(Component, [{\n    key: \"attachListenersAndAddChildComponents\",\n    value: function attachListenersAndAddChildComponents() {\n      var _this = this;\n\n      _domWalker_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].walk(this.el, function (node) {\n        if (_this.el.isSameNode(node)) {\n          return;\n        }\n\n        if (Object(_domHelpers__WEBPACK_IMPORTED_MODULE_1__[\"isComponentRootEl\"])(node)) {\n          _this.addChildComponent(node);\n        }\n\n        _this.nodeInitializer.initialize(node);\n      });\n    }\n  }, {\n    key: \"addChildComponent\",\n    value: function addChildComponent(el) {\n      var component = new Component(el, this.nodeInitializer, this);\n      _store__WEBPACK_IMPORTED_MODULE_3__[\"default\"].componentsById[component.id] = component;\n    }\n  }, {\n    key: \"replace\",\n    value: function replace(dom, dirtyInputs, serialized) {\n      var _this2 = this;\n\n      this.serialized = serialized; // Prevent morphdom from moving an input element and it losing it's focus.\n\n      Object(_domHelpers__WEBPACK_IMPORTED_MODULE_1__[\"preserveActiveElement\"])(function () {\n        _this2.handleMorph(dom.trim(), dirtyInputs);\n      });\n    }\n  }, {\n    key: \"setLoading\",\n    value: function setLoading(refName) {\n      Object(_domHelpers__WEBPACK_IMPORTED_MODULE_1__[\"elsByAttributeAndValue\"])('loading', refName, this.el).forEach(function (el) {\n        el.classList.remove('hidden');\n      });\n    }\n  }, {\n    key: \"unsetLoading\",\n    value: function unsetLoading(refName) {\n      Object(_domHelpers__WEBPACK_IMPORTED_MODULE_1__[\"elsByAttributeAndValue\"])('loading', refName, this.el).forEach(function (el) {\n        el.classList.add('hidden');\n      });\n    }\n  }, {\n    key: \"handleMorph\",\n    value: function handleMorph(dom, dirtyInputs) {\n      var _this3 = this;\n\n      Object(_morphdom_index_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(this.el, dom, {\n        onBeforeNodeAdded: function onBeforeNodeAdded(node) {\n          if (typeof node.hasAttribute !== 'function') return;\n          Object(_domHelpers__WEBPACK_IMPORTED_MODULE_1__[\"transitionElementIn\"])(node);\n        },\n        onBeforeNodeDiscarded: function onBeforeNodeDiscarded(node) {\n          if (typeof node.hasAttribute !== 'function') return;\n          return Object(_domHelpers__WEBPACK_IMPORTED_MODULE_1__[\"transitionElementOut\"])(node);\n        },\n        onBeforeElChildrenUpdated: function onBeforeElChildrenUpdated(from) {\n          if (Object(_domHelpers__WEBPACK_IMPORTED_MODULE_1__[\"isComponentRootEl\"])(from) && !from.isSameNode(_this3.el)) {\n            return false;\n          }\n        },\n        onBeforeElUpdated: function onBeforeElUpdated(from) {\n          if (Object(_domHelpers__WEBPACK_IMPORTED_MODULE_1__[\"isComponentRootEl\"])(from) && !from.isSameNode(_this3.el)) {\n            return false;\n          }\n\n          return Object(_domHelpers__WEBPACK_IMPORTED_MODULE_1__[\"shouldUpdateInputElementGivenItHasBeenUpdatedViaSync\"])(from, dirtyInputs);\n        },\n        onNodeAdded: function onNodeAdded(node) {\n          if (typeof node.hasAttribute !== 'function') return;\n\n          if (Object(_domHelpers__WEBPACK_IMPORTED_MODULE_1__[\"isComponentRootEl\"])(node)) {\n            _this3.addChildComponent(node);\n          }\n\n          _this3.nodeInitializer.initialize(node);\n        }\n      });\n    }\n  }, {\n    key: \"el\",\n    get: function get() {\n      // I made this a getter, so that we aren't ever getting a stale DOM element.\n      // If it's too slow, we can re-evaluate it.\n      return Object(_domHelpers__WEBPACK_IMPORTED_MODULE_1__[\"elByAttributeAndValue\"])('root-id', this.id);\n    }\n  }]);\n\n  return Component;\n}();\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/Component.js\n");

/***/ }),

/***/ "./src/js/ComponentManager.js":
/*!************************************!*\
  !*** ./src/js/ComponentManager.js ***!
  \************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return ComponentManager; });\n/* harmony import */ var _Component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Component */ \"./src/js/Component.js\");\n/* harmony import */ var _store__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./store */ \"./src/js/store.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\nvar prefix = __webpack_require__(/*! ./prefix.js */ \"./src/js/prefix.js\")();\n\nvar ComponentManager =\n/*#__PURE__*/\nfunction () {\n  function ComponentManager(nodeInitializer) {\n    _classCallCheck(this, ComponentManager);\n\n    // I really need some kind of dependancy container so I don't have\n    // to pass dependancies through objects like this.\n    this.nodeInitializer = nodeInitializer;\n  }\n\n  _createClass(ComponentManager, [{\n    key: \"init\",\n    value: function init() {\n      var _this = this;\n\n      this.rootComponentElements.forEach(function (el) {\n        var component = new _Component__WEBPACK_IMPORTED_MODULE_0__[\"default\"](el, _this.nodeInitializer);\n        component.attachListenersAndAddChildComponents();\n        _store__WEBPACK_IMPORTED_MODULE_1__[\"default\"].componentsById[component.id] = component;\n      });\n    }\n  }, {\n    key: \"rootComponentElements\",\n    get: function get() {\n      // In CSS, it's simple to select all elements that DO have a certain ancestor.\n      // However, it's not simple (kinda impossible) to select elements that DONT have\n      // a certain ancestor. Therefore, we will flip the logic (select all roots that have\n      // have a root ancestor), then select all roots, then diff the two.\n      // Convert NodeLists to Arrays so we can use \".includes()\". Ew.\n      var allEls = Array.prototype.slice.call(document.querySelectorAll(\"[\".concat(prefix, \"\\\\:root-id]\")));\n      var onlyChildEls = Array.prototype.slice.call(document.querySelectorAll(\"[\".concat(prefix, \"\\\\:root-id] [\").concat(prefix, \"\\\\:root-id]\")));\n      return allEls.filter(function (el) {\n        return !onlyChildEls.includes(el);\n      });\n    }\n  }]);\n\n  return ComponentManager;\n}();\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvQ29tcG9uZW50TWFuYWdlci5qcz83MjQ2Il0sIm5hbWVzIjpbInByZWZpeCIsInJlcXVpcmUiLCJDb21wb25lbnRNYW5hZ2VyIiwibm9kZUluaXRpYWxpemVyIiwicm9vdENvbXBvbmVudEVsZW1lbnRzIiwiZm9yRWFjaCIsImVsIiwiY29tcG9uZW50IiwiQ29tcG9uZW50IiwiYXR0YWNoTGlzdGVuZXJzQW5kQWRkQ2hpbGRDb21wb25lbnRzIiwic3RvcmUiLCJjb21wb25lbnRzQnlJZCIsImlkIiwiYWxsRWxzIiwiQXJyYXkiLCJwcm90b3R5cGUiLCJzbGljZSIsImNhbGwiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJvbmx5Q2hpbGRFbHMiLCJmaWx0ZXIiLCJpbmNsdWRlcyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBO0FBQ0E7O0FBQ0EsSUFBTUEsTUFBTSxHQUFHQyxtQkFBTyxDQUFDLHVDQUFELENBQVAsRUFBZjs7SUFFcUJDLGdCOzs7QUFDakIsNEJBQVlDLGVBQVosRUFBNkI7QUFBQTs7QUFDekI7QUFDQTtBQUNBLFNBQUtBLGVBQUwsR0FBdUJBLGVBQXZCO0FBQ0g7Ozs7MkJBRU07QUFBQTs7QUFDSCxXQUFLQyxxQkFBTCxDQUEyQkMsT0FBM0IsQ0FBbUMsVUFBQUMsRUFBRSxFQUFJO0FBQ3JDLFlBQU1DLFNBQVMsR0FBRyxJQUFJQyxrREFBSixDQUFjRixFQUFkLEVBQWtCLEtBQUksQ0FBQ0gsZUFBdkIsQ0FBbEI7QUFDQUksaUJBQVMsQ0FBQ0Usb0NBQVY7QUFFQUMsc0RBQUssQ0FBQ0MsY0FBTixDQUFxQkosU0FBUyxDQUFDSyxFQUEvQixJQUFxQ0wsU0FBckM7QUFDSCxPQUxEO0FBTUg7Ozt3QkFFMkI7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBLFVBQU1NLE1BQU0sR0FBR0MsS0FBSyxDQUFDQyxTQUFOLENBQWdCQyxLQUFoQixDQUFzQkMsSUFBdEIsQ0FDWEMsUUFBUSxDQUFDQyxnQkFBVCxZQUE4Qm5CLE1BQTlCLGlCQURXLENBQWY7QUFHQSxVQUFNb0IsWUFBWSxHQUFHTixLQUFLLENBQUNDLFNBQU4sQ0FBZ0JDLEtBQWhCLENBQXNCQyxJQUF0QixDQUNqQkMsUUFBUSxDQUFDQyxnQkFBVCxZQUE4Qm5CLE1BQTlCLDBCQUFvREEsTUFBcEQsaUJBRGlCLENBQXJCO0FBSUEsYUFBT2EsTUFBTSxDQUFDUSxNQUFQLENBQWMsVUFBQWYsRUFBRSxFQUFJO0FBQ3ZCLGVBQU8sQ0FBRWMsWUFBWSxDQUFDRSxRQUFiLENBQXNCaEIsRUFBdEIsQ0FBVDtBQUNILE9BRk0sQ0FBUDtBQUdIIiwiZmlsZSI6Ii4vc3JjL2pzL0NvbXBvbmVudE1hbmFnZXIuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQ29tcG9uZW50IGZyb20gXCIuL0NvbXBvbmVudFwiO1xuaW1wb3J0IHN0b3JlIGZyb20gJy4vc3RvcmUnXG5jb25zdCBwcmVmaXggPSByZXF1aXJlKCcuL3ByZWZpeC5qcycpKClcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ29tcG9uZW50TWFuYWdlciB7XG4gICAgY29uc3RydWN0b3Iobm9kZUluaXRpYWxpemVyKSB7XG4gICAgICAgIC8vIEkgcmVhbGx5IG5lZWQgc29tZSBraW5kIG9mIGRlcGVuZGFuY3kgY29udGFpbmVyIHNvIEkgZG9uJ3QgaGF2ZVxuICAgICAgICAvLyB0byBwYXNzIGRlcGVuZGFuY2llcyB0aHJvdWdoIG9iamVjdHMgbGlrZSB0aGlzLlxuICAgICAgICB0aGlzLm5vZGVJbml0aWFsaXplciA9IG5vZGVJbml0aWFsaXplclxuICAgIH1cblxuICAgIGluaXQoKSB7XG4gICAgICAgIHRoaXMucm9vdENvbXBvbmVudEVsZW1lbnRzLmZvckVhY2goZWwgPT4ge1xuICAgICAgICAgICAgY29uc3QgY29tcG9uZW50ID0gbmV3IENvbXBvbmVudChlbCwgdGhpcy5ub2RlSW5pdGlhbGl6ZXIpXG4gICAgICAgICAgICBjb21wb25lbnQuYXR0YWNoTGlzdGVuZXJzQW5kQWRkQ2hpbGRDb21wb25lbnRzKClcblxuICAgICAgICAgICAgc3RvcmUuY29tcG9uZW50c0J5SWRbY29tcG9uZW50LmlkXSA9IGNvbXBvbmVudFxuICAgICAgICB9KVxuICAgIH1cblxuICAgIGdldCByb290Q29tcG9uZW50RWxlbWVudHMoKSB7XG4gICAgICAgIC8vIEluIENTUywgaXQncyBzaW1wbGUgdG8gc2VsZWN0IGFsbCBlbGVtZW50cyB0aGF0IERPIGhhdmUgYSBjZXJ0YWluIGFuY2VzdG9yLlxuICAgICAgICAvLyBIb3dldmVyLCBpdCdzIG5vdCBzaW1wbGUgKGtpbmRhIGltcG9zc2libGUpIHRvIHNlbGVjdCBlbGVtZW50cyB0aGF0IERPTlQgaGF2ZVxuICAgICAgICAvLyBhIGNlcnRhaW4gYW5jZXN0b3IuIFRoZXJlZm9yZSwgd2Ugd2lsbCBmbGlwIHRoZSBsb2dpYyAoc2VsZWN0IGFsbCByb290cyB0aGF0IGhhdmVcbiAgICAgICAgLy8gaGF2ZSBhIHJvb3QgYW5jZXN0b3IpLCB0aGVuIHNlbGVjdCBhbGwgcm9vdHMsIHRoZW4gZGlmZiB0aGUgdHdvLlxuXG4gICAgICAgIC8vIENvbnZlcnQgTm9kZUxpc3RzIHRvIEFycmF5cyBzbyB3ZSBjYW4gdXNlIFwiLmluY2x1ZGVzKClcIi4gRXcuXG4gICAgICAgIGNvbnN0IGFsbEVscyA9IEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKFxuICAgICAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChgWyR7cHJlZml4fVxcXFw6cm9vdC1pZF1gKVxuICAgICAgICApXG4gICAgICAgIGNvbnN0IG9ubHlDaGlsZEVscyA9IEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKFxuICAgICAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChgWyR7cHJlZml4fVxcXFw6cm9vdC1pZF0gWyR7cHJlZml4fVxcXFw6cm9vdC1pZF1gKVxuICAgICAgICApXG5cbiAgICAgICAgcmV0dXJuIGFsbEVscy5maWx0ZXIoZWwgPT4ge1xuICAgICAgICAgICAgcmV0dXJuICEgb25seUNoaWxkRWxzLmluY2x1ZGVzKGVsKVxuICAgICAgICB9KVxuICAgIH1cbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/js/ComponentManager.js\n");

/***/ }),

/***/ "./src/js/Connection.js":
/*!******************************!*\
  !*** ./src/js/Connection.js ***!
  \******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Connection; });\n/* harmony import */ var _store__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./store */ \"./src/js/store.js\");\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\nvar Connection =\n/*#__PURE__*/\nfunction () {\n  function Connection(driver) {\n    var _this = this;\n\n    _classCallCheck(this, Connection);\n\n    this.driver = driver;\n\n    this.driver.onMessage = function (payload) {\n      _this.onMessage(payload);\n    };\n\n    this.driver.refreshDom = function (payload) {\n      _this.refreshDom();\n    };\n  }\n\n  _createClass(Connection, [{\n    key: \"init\",\n    value: function init() {\n      this.driver.init();\n      return this;\n    }\n  }, {\n    key: \"onMessage\",\n    value: function onMessage(payload) {\n      var id = payload.id,\n          dom = payload.dom,\n          dirtyInputs = payload.dirtyInputs,\n          serialized = payload.serialized,\n          redirectTo = payload.redirectTo,\n          ref = payload.ref,\n          emitEvent = payload.emitEvent;\n\n      if (redirectTo) {\n        window.location.href = redirectTo;\n        return;\n      }\n\n      _store__WEBPACK_IMPORTED_MODULE_0__[\"default\"].componentsById[id].replace(dom, dirtyInputs, serialized);\n\n      if (ref) {\n        _store__WEBPACK_IMPORTED_MODULE_0__[\"default\"].componentsById[id].unsetLoading(ref);\n      }\n\n      if (emitEvent) {\n        this.sendEvent(emitEvent.name, emitEvent.params, _store__WEBPACK_IMPORTED_MODULE_0__[\"default\"].componentsById[id]);\n      }\n    }\n  }, {\n    key: \"sendMessage\",\n    value: function sendMessage(data, root, minWait) {\n      this.driver.sendMessage(_objectSpread({}, data, {\n        serialized: root.serialized\n      }), minWait);\n    }\n  }, {\n    key: \"refreshDom\",\n    value: function refreshDom() {\n      var _this2 = this;\n\n      rootsStore.forEach(function (root) {\n        _this2.sendMessage({\n          id: root.id,\n          event: 'refresh'\n        }, root);\n      });\n    }\n  }, {\n    key: \"sendMethod\",\n    value: function sendMethod(method, params, root, ref, minWait) {\n      if (ref) {\n        root.setLoading(ref);\n      }\n\n      this.sendMessage({\n        id: root.id,\n        event: 'fireMethod',\n        data: {\n          method: method,\n          params: params,\n          ref: ref\n        }\n      }, root, minWait);\n    }\n  }, {\n    key: \"sendEvent\",\n    value: function sendEvent(name, params, component, ref) {\n      if (ref) {\n        component.setLoading(ref);\n      }\n\n      this.sendMessage({\n        id: component.parent.id,\n        event: 'fireEvent',\n        data: {\n          childId: component.id,\n          name: name,\n          params: params,\n          ref: ref\n        }\n      }, component.parent);\n    }\n  }, {\n    key: \"sendSync\",\n    value: function sendSync(name, value, root) {\n      this.sendMessage({\n        event: 'syncInput',\n        data: {\n          name: name,\n          value: value\n        }\n      }, root);\n    }\n  }]);\n\n  return Connection;\n}();\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvQ29ubmVjdGlvbi5qcz9hNzZmIl0sIm5hbWVzIjpbIkNvbm5lY3Rpb24iLCJkcml2ZXIiLCJvbk1lc3NhZ2UiLCJwYXlsb2FkIiwicmVmcmVzaERvbSIsImluaXQiLCJpZCIsImRvbSIsImRpcnR5SW5wdXRzIiwic2VyaWFsaXplZCIsInJlZGlyZWN0VG8iLCJyZWYiLCJlbWl0RXZlbnQiLCJ3aW5kb3ciLCJsb2NhdGlvbiIsImhyZWYiLCJzdG9yZSIsImNvbXBvbmVudHNCeUlkIiwicmVwbGFjZSIsInVuc2V0TG9hZGluZyIsInNlbmRFdmVudCIsIm5hbWUiLCJwYXJhbXMiLCJkYXRhIiwicm9vdCIsIm1pbldhaXQiLCJzZW5kTWVzc2FnZSIsInJvb3RzU3RvcmUiLCJmb3JFYWNoIiwiZXZlbnQiLCJtZXRob2QiLCJzZXRMb2FkaW5nIiwiY29tcG9uZW50IiwicGFyZW50IiwiY2hpbGRJZCIsInZhbHVlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQUE7O0lBRXFCQSxVOzs7QUFDakIsc0JBQVlDLE1BQVosRUFBb0I7QUFBQTs7QUFBQTs7QUFDaEIsU0FBS0EsTUFBTCxHQUFjQSxNQUFkOztBQUVBLFNBQUtBLE1BQUwsQ0FBWUMsU0FBWixHQUF3QixVQUFDQyxPQUFELEVBQWE7QUFDakMsV0FBSSxDQUFDRCxTQUFMLENBQWVDLE9BQWY7QUFDSCxLQUZEOztBQUlBLFNBQUtGLE1BQUwsQ0FBWUcsVUFBWixHQUF5QixVQUFDRCxPQUFELEVBQWE7QUFDbEMsV0FBSSxDQUFDQyxVQUFMO0FBQ0gsS0FGRDtBQUdIOzs7OzJCQUVNO0FBQ0gsV0FBS0gsTUFBTCxDQUFZSSxJQUFaO0FBRUEsYUFBTyxJQUFQO0FBQ0g7Ozs4QkFFU0YsTyxFQUFTO0FBQUEsVUFDUEcsRUFETyxHQUMwREgsT0FEMUQsQ0FDUEcsRUFETztBQUFBLFVBQ0hDLEdBREcsR0FDMERKLE9BRDFELENBQ0hJLEdBREc7QUFBQSxVQUNFQyxXQURGLEdBQzBETCxPQUQxRCxDQUNFSyxXQURGO0FBQUEsVUFDZUMsVUFEZixHQUMwRE4sT0FEMUQsQ0FDZU0sVUFEZjtBQUFBLFVBQzJCQyxVQUQzQixHQUMwRFAsT0FEMUQsQ0FDMkJPLFVBRDNCO0FBQUEsVUFDdUNDLEdBRHZDLEdBQzBEUixPQUQxRCxDQUN1Q1EsR0FEdkM7QUFBQSxVQUM0Q0MsU0FENUMsR0FDMERULE9BRDFELENBQzRDUyxTQUQ1Qzs7QUFHZixVQUFJRixVQUFKLEVBQWdCO0FBQ1pHLGNBQU0sQ0FBQ0MsUUFBUCxDQUFnQkMsSUFBaEIsR0FBdUJMLFVBQXZCO0FBQ0E7QUFDSDs7QUFFRE0sb0RBQUssQ0FBQ0MsY0FBTixDQUFxQlgsRUFBckIsRUFBeUJZLE9BQXpCLENBQWlDWCxHQUFqQyxFQUFzQ0MsV0FBdEMsRUFBbURDLFVBQW5EOztBQUVBLFVBQUlFLEdBQUosRUFBUztBQUNMSyxzREFBSyxDQUFDQyxjQUFOLENBQXFCWCxFQUFyQixFQUF5QmEsWUFBekIsQ0FBc0NSLEdBQXRDO0FBQ0g7O0FBRUQsVUFBSUMsU0FBSixFQUFlO0FBQ1gsYUFBS1EsU0FBTCxDQUFlUixTQUFTLENBQUNTLElBQXpCLEVBQStCVCxTQUFTLENBQUNVLE1BQXpDLEVBQWlETiw4Q0FBSyxDQUFDQyxjQUFOLENBQXFCWCxFQUFyQixDQUFqRDtBQUNIO0FBQ0o7OztnQ0FFV2lCLEksRUFBTUMsSSxFQUFNQyxPLEVBQVM7QUFDN0IsV0FBS3hCLE1BQUwsQ0FBWXlCLFdBQVosbUJBQ09ILElBRFAsRUFFTztBQUFFZCxrQkFBVSxFQUFFZSxJQUFJLENBQUNmO0FBQW5CLE9BRlAsR0FHR2dCLE9BSEg7QUFJSDs7O2lDQUVZO0FBQUE7O0FBQ1RFLGdCQUFVLENBQUNDLE9BQVgsQ0FBbUIsVUFBQUosSUFBSSxFQUFJO0FBQ3ZCLGNBQUksQ0FBQ0UsV0FBTCxDQUFpQjtBQUFFcEIsWUFBRSxFQUFFa0IsSUFBSSxDQUFDbEIsRUFBWDtBQUFldUIsZUFBSyxFQUFFO0FBQXRCLFNBQWpCLEVBQW9ETCxJQUFwRDtBQUNILE9BRkQ7QUFHSDs7OytCQUVVTSxNLEVBQVFSLE0sRUFBUUUsSSxFQUFNYixHLEVBQUtjLE8sRUFBUztBQUMzQyxVQUFJZCxHQUFKLEVBQVM7QUFDTGEsWUFBSSxDQUFDTyxVQUFMLENBQWdCcEIsR0FBaEI7QUFDSDs7QUFFRCxXQUFLZSxXQUFMLENBQWlCO0FBQ2JwQixVQUFFLEVBQUVrQixJQUFJLENBQUNsQixFQURJO0FBRWJ1QixhQUFLLEVBQUUsWUFGTTtBQUdiTixZQUFJLEVBQUU7QUFDRk8sZ0JBQU0sRUFBTkEsTUFERTtBQUVGUixnQkFBTSxFQUFOQSxNQUZFO0FBR0ZYLGFBQUcsRUFBSEE7QUFIRTtBQUhPLE9BQWpCLEVBUUdhLElBUkgsRUFRU0MsT0FSVDtBQVNIOzs7OEJBRVNKLEksRUFBTUMsTSxFQUFRVSxTLEVBQVdyQixHLEVBQUs7QUFDcEMsVUFBSUEsR0FBSixFQUFTO0FBQ0xxQixpQkFBUyxDQUFDRCxVQUFWLENBQXFCcEIsR0FBckI7QUFDSDs7QUFFRCxXQUFLZSxXQUFMLENBQWlCO0FBQ2JwQixVQUFFLEVBQUUwQixTQUFTLENBQUNDLE1BQVYsQ0FBaUIzQixFQURSO0FBRWJ1QixhQUFLLEVBQUUsV0FGTTtBQUdiTixZQUFJLEVBQUU7QUFDRlcsaUJBQU8sRUFBRUYsU0FBUyxDQUFDMUIsRUFEakI7QUFFRmUsY0FBSSxFQUFKQSxJQUZFO0FBR0ZDLGdCQUFNLEVBQU5BLE1BSEU7QUFJRlgsYUFBRyxFQUFIQTtBQUpFO0FBSE8sT0FBakIsRUFTR3FCLFNBQVMsQ0FBQ0MsTUFUYjtBQVVIOzs7NkJBRVFaLEksRUFBTWMsSyxFQUFPWCxJLEVBQU07QUFDeEIsV0FBS0UsV0FBTCxDQUFpQjtBQUNiRyxhQUFLLEVBQUUsV0FETTtBQUViTixZQUFJLEVBQUU7QUFBRUYsY0FBSSxFQUFKQSxJQUFGO0FBQVFjLGVBQUssRUFBTEE7QUFBUjtBQUZPLE9BQWpCLEVBR0dYLElBSEg7QUFJSCIsImZpbGUiOiIuL3NyYy9qcy9Db25uZWN0aW9uLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHN0b3JlIGZyb20gJy4vc3RvcmUnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBDb25uZWN0aW9uIHtcbiAgICBjb25zdHJ1Y3Rvcihkcml2ZXIpIHtcbiAgICAgICAgdGhpcy5kcml2ZXIgPSBkcml2ZXJcblxuICAgICAgICB0aGlzLmRyaXZlci5vbk1lc3NhZ2UgPSAocGF5bG9hZCkgPT4ge1xuICAgICAgICAgICAgdGhpcy5vbk1lc3NhZ2UocGF5bG9hZClcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMuZHJpdmVyLnJlZnJlc2hEb20gPSAocGF5bG9hZCkgPT4ge1xuICAgICAgICAgICAgdGhpcy5yZWZyZXNoRG9tKClcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGluaXQoKSB7XG4gICAgICAgIHRoaXMuZHJpdmVyLmluaXQoKVxuXG4gICAgICAgIHJldHVybiB0aGlzXG4gICAgfVxuXG4gICAgb25NZXNzYWdlKHBheWxvYWQpIHtcbiAgICAgICAgY29uc3QgeyBpZCwgZG9tLCBkaXJ0eUlucHV0cywgc2VyaWFsaXplZCwgcmVkaXJlY3RUbywgcmVmLCBlbWl0RXZlbnQgfSA9IHBheWxvYWRcblxuICAgICAgICBpZiAocmVkaXJlY3RUbykge1xuICAgICAgICAgICAgd2luZG93LmxvY2F0aW9uLmhyZWYgPSByZWRpcmVjdFRvXG4gICAgICAgICAgICByZXR1cm5cbiAgICAgICAgfVxuXG4gICAgICAgIHN0b3JlLmNvbXBvbmVudHNCeUlkW2lkXS5yZXBsYWNlKGRvbSwgZGlydHlJbnB1dHMsIHNlcmlhbGl6ZWQpXG5cbiAgICAgICAgaWYgKHJlZikge1xuICAgICAgICAgICAgc3RvcmUuY29tcG9uZW50c0J5SWRbaWRdLnVuc2V0TG9hZGluZyhyZWYpXG4gICAgICAgIH1cblxuICAgICAgICBpZiAoZW1pdEV2ZW50KSB7XG4gICAgICAgICAgICB0aGlzLnNlbmRFdmVudChlbWl0RXZlbnQubmFtZSwgZW1pdEV2ZW50LnBhcmFtcywgc3RvcmUuY29tcG9uZW50c0J5SWRbaWRdKVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgc2VuZE1lc3NhZ2UoZGF0YSwgcm9vdCwgbWluV2FpdCkge1xuICAgICAgICB0aGlzLmRyaXZlci5zZW5kTWVzc2FnZSh7XG4gICAgICAgICAgICAuLi5kYXRhLFxuICAgICAgICAgICAgLi4ueyBzZXJpYWxpemVkOiByb290LnNlcmlhbGl6ZWQgfSxcbiAgICAgICAgfSwgbWluV2FpdCk7XG4gICAgfVxuXG4gICAgcmVmcmVzaERvbSgpIHtcbiAgICAgICAgcm9vdHNTdG9yZS5mb3JFYWNoKHJvb3QgPT4ge1xuICAgICAgICAgICAgdGhpcy5zZW5kTWVzc2FnZSh7IGlkOiByb290LmlkLCBldmVudDogJ3JlZnJlc2gnIH0sIHJvb3QpXG4gICAgICAgIH0pXG4gICAgfVxuXG4gICAgc2VuZE1ldGhvZChtZXRob2QsIHBhcmFtcywgcm9vdCwgcmVmLCBtaW5XYWl0KSB7XG4gICAgICAgIGlmIChyZWYpIHtcbiAgICAgICAgICAgIHJvb3Quc2V0TG9hZGluZyhyZWYpXG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLnNlbmRNZXNzYWdlKHtcbiAgICAgICAgICAgIGlkOiByb290LmlkLFxuICAgICAgICAgICAgZXZlbnQ6ICdmaXJlTWV0aG9kJyxcbiAgICAgICAgICAgIGRhdGE6IHtcbiAgICAgICAgICAgICAgICBtZXRob2QsXG4gICAgICAgICAgICAgICAgcGFyYW1zLFxuICAgICAgICAgICAgICAgIHJlZixcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH0sIHJvb3QsIG1pbldhaXQpXG4gICAgfVxuXG4gICAgc2VuZEV2ZW50KG5hbWUsIHBhcmFtcywgY29tcG9uZW50LCByZWYpIHtcbiAgICAgICAgaWYgKHJlZikge1xuICAgICAgICAgICAgY29tcG9uZW50LnNldExvYWRpbmcocmVmKVxuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5zZW5kTWVzc2FnZSh7XG4gICAgICAgICAgICBpZDogY29tcG9uZW50LnBhcmVudC5pZCxcbiAgICAgICAgICAgIGV2ZW50OiAnZmlyZUV2ZW50JyxcbiAgICAgICAgICAgIGRhdGE6IHtcbiAgICAgICAgICAgICAgICBjaGlsZElkOiBjb21wb25lbnQuaWQsXG4gICAgICAgICAgICAgICAgbmFtZSxcbiAgICAgICAgICAgICAgICBwYXJhbXMsXG4gICAgICAgICAgICAgICAgcmVmLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgfSwgY29tcG9uZW50LnBhcmVudClcbiAgICB9XG5cbiAgICBzZW5kU3luYyhuYW1lLCB2YWx1ZSwgcm9vdCkge1xuICAgICAgICB0aGlzLnNlbmRNZXNzYWdlKHtcbiAgICAgICAgICAgIGV2ZW50OiAnc3luY0lucHV0JyxcbiAgICAgICAgICAgIGRhdGE6IHsgbmFtZSwgdmFsdWUgfSxcbiAgICAgICAgfSwgcm9vdClcbiAgICB9XG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/js/Connection.js\n");

/***/ }),

/***/ "./src/js/NodeInitializer.js":
/*!***********************************!*\
  !*** ./src/js/NodeInitializer.js ***!
  \***********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return NodeInitializer; });\n/* harmony import */ var _renameme__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./renameme */ \"./src/js/renameme.js\");\n/* harmony import */ var _store__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./store */ \"./src/js/store.js\");\n/* harmony import */ var _domHelpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./domHelpers */ \"./src/js/domHelpers.js\");\nfunction _toArray(arr) { return _arrayWithHoles(arr) || _iterableToArray(arr) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\nvar prefix = __webpack_require__(/*! ./prefix.js */ \"./src/js/prefix.js\")();\n\n\n\nvar NodeInitializer =\n/*#__PURE__*/\nfunction () {\n  function NodeInitializer(connection) {\n    _classCallCheck(this, NodeInitializer);\n\n    this.connection = connection.init();\n  }\n\n  _createClass(NodeInitializer, [{\n    key: \"findByEl\",\n    value: function findByEl(el) {\n      return _store__WEBPACK_IMPORTED_MODULE_1__[\"default\"].componentsById[this.getRootIdFromEl(el)];\n    }\n  }, {\n    key: \"getRootIdFromEl\",\n    value: function getRootIdFromEl(el) {\n      return Object(_domHelpers__WEBPACK_IMPORTED_MODULE_2__[\"getAttribute\"])(Object(_domHelpers__WEBPACK_IMPORTED_MODULE_2__[\"closestByAttribute\"])(el, 'root-id'), 'root-id');\n    }\n  }, {\n    key: \"initialize\",\n    value: function initialize(node) {\n      var _this = this;\n\n      // Make sure it's an ElementNode and not a TextNode or something\n      if (typeof node.hasAttribute !== 'function') return;\n      var directives = Object(_domHelpers__WEBPACK_IMPORTED_MODULE_2__[\"extractDirectivesModifiersAndValuesFromEl\"])(node);\n\n      if (Object.keys(directives).includes('click')) {\n        if (directives['click'].modifiers.includes('min')) {\n          var waitTime = Number((directives['click'].modifiers.filter(function (item) {\n            return item.match(/.*ms/);\n          })[0] || '0ms').match('(.*)ms')[1]);\n        } else {\n          var waitTime = 0;\n        }\n\n        _renameme__WEBPACK_IMPORTED_MODULE_0__[\"default\"].attachClick(node, function (method, params, el) {\n          if (method === '$emit') {\n            var eventName;\n            var _params = params;\n\n            var _params2 = _toArray(_params);\n\n            eventName = _params2[0];\n            params = _params2.slice(1);\n\n            _this.connection.sendEvent(eventName, params, _this.findByEl(el));\n\n            return;\n          }\n\n          _this.connection.sendMethod(method, params, _this.findByEl(el), el.getAttribute(\"\".concat(prefix, \":ref\")), waitTime);\n        }, directives['click'].modifiers, directives['click'].value);\n      }\n\n      if (Object.keys(directives).includes('loading')) {\n        var ref = directives['loading'].value;\n        var root = this.findByEl(node);\n        root.addLoadingEl(node, ref);\n      }\n\n      if (Object.keys(directives).includes('submit')) {\n        _renameme__WEBPACK_IMPORTED_MODULE_0__[\"default\"].attachSubmit(node, function (method, params, el) {\n          var root = _this.findByEl(el);\n\n          _this.connection.sendMethod(method, [params], root, el.getAttribute(\"\".concat(prefix, \":ref\")));\n        });\n      }\n\n      if (Object.keys(directives).includes('keydown')) {\n        _renameme__WEBPACK_IMPORTED_MODULE_0__[\"default\"].attachEnter(node, function (method, params, el) {\n          _this.connection.sendMethod(method, params, _this.findByEl(el));\n        }, directives['keydown'].modifiers, directives['keydown'].value);\n      }\n\n      if (Object.keys(directives).includes('sync')) {\n        _renameme__WEBPACK_IMPORTED_MODULE_0__[\"default\"].attachSync(node, function (model, el) {\n          var value = el.type === 'checkbox' ? el.checked : el.value;\n\n          _this.connection.sendSync(model, value, _this.findByEl(el));\n        });\n      }\n    }\n  }]);\n\n  return NodeInitializer;\n}();\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/NodeInitializer.js\n");

/***/ }),

/***/ "./src/js/debounce.js":
/*!****************************!*\
  !*** ./src/js/debounce.js ***!
  \****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return debounce; });\n/* harmony import */ var _renameme_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./renameme.js */ \"./src/js/renameme.js\");\n // This is kindof like a normal debouncer, except it behaves like both \"immediate\" and\n// \"non-immediate\". I'll try to graph the differences:\n// [normal] =    .......|\n// [immediate] = |.......\n// [both] =      |......|\n// The reason I want it to fire on both ends of the debounce is for the following scenario:\n// - a user types a letter into an input\n// - the debouncer is waiting 200ms to send the ajax request\n// - in the meantime a user hits the enter key\n// - the debouncer is not up yet, so the \"enter\" request will get fired before the \"key\" request\n// Note: I also added a checker in here (\"wasInterupted\") for the the case of a user\n// only typing one key, but two ajax requests getting sent.\n\nfunction debounce(func, wait) {\n  var timeout;\n  var timesInterupted = 0;\n  return function () {\n    var context = this,\n        args = arguments;\n    var callNow = !timeout;\n\n    if (timeout) {\n      clearTimeout(timeout);\n      timesInterupted++;\n    }\n\n    timeout = setTimeout(function () {\n      timeout = null;\n      _renameme_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].timeout = 0;\n\n      if (timesInterupted > 0) {\n        func.apply(context, args);\n        timesInterupted = 0;\n      }\n    }, wait);\n    _renameme_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].timeout = wait;\n\n    if (callNow) {\n      func.apply(context, args);\n    }\n  };\n}\n;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvZGVib3VuY2UuanM/ZDc3OCJdLCJuYW1lcyI6WyJkZWJvdW5jZSIsImZ1bmMiLCJ3YWl0IiwidGltZW91dCIsInRpbWVzSW50ZXJ1cHRlZCIsImNvbnRleHQiLCJhcmdzIiwiYXJndW1lbnRzIiwiY2FsbE5vdyIsImNsZWFyVGltZW91dCIsInNldFRpbWVvdXQiLCJyZW5hbWVtZSIsImFwcGx5Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7Q0FFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7O0FBRWUsU0FBU0EsUUFBVCxDQUFrQkMsSUFBbEIsRUFBd0JDLElBQXhCLEVBQThCO0FBRXpDLE1BQUlDLE9BQUo7QUFDQSxNQUFJQyxlQUFlLEdBQUcsQ0FBdEI7QUFDSCxTQUFPLFlBQVc7QUFDWCxRQUFJQyxPQUFPLEdBQUcsSUFBZDtBQUFBLFFBQW9CQyxJQUFJLEdBQUdDLFNBQTNCO0FBRUEsUUFBSUMsT0FBTyxHQUFHLENBQUNMLE9BQWY7O0FBRUEsUUFBSUEsT0FBSixFQUFhO0FBQ1RNLGtCQUFZLENBQUNOLE9BQUQsQ0FBWjtBQUNBQyxxQkFBZTtBQUNsQjs7QUFFREQsV0FBTyxHQUFHTyxVQUFVLENBQUMsWUFBWTtBQUM3QlAsYUFBTyxHQUFHLElBQVY7QUFDQVEsMERBQVEsQ0FBQ1IsT0FBVCxHQUFtQixDQUFuQjs7QUFDQSxVQUFJQyxlQUFlLEdBQUcsQ0FBdEIsRUFBeUI7QUFDckJILFlBQUksQ0FBQ1csS0FBTCxDQUFXUCxPQUFYLEVBQW9CQyxJQUFwQjtBQUNBRix1QkFBZSxHQUFHLENBQWxCO0FBQ0g7QUFDSixLQVBtQixFQU9qQkYsSUFQaUIsQ0FBcEI7QUFRQVMsd0RBQVEsQ0FBQ1IsT0FBVCxHQUFtQkQsSUFBbkI7O0FBRU4sUUFBSU0sT0FBSixFQUFhO0FBQ0hQLFVBQUksQ0FBQ1csS0FBTCxDQUFXUCxPQUFYLEVBQW9CQyxJQUFwQjtBQUNIO0FBQ1AsR0F2QkQ7QUF3QkE7QUFBQSIsImZpbGUiOiIuL3NyYy9qcy9kZWJvdW5jZS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCByZW5hbWVtZSBmcm9tICcuL3JlbmFtZW1lLmpzJ1xuXG4vLyBUaGlzIGlzIGtpbmRvZiBsaWtlIGEgbm9ybWFsIGRlYm91bmNlciwgZXhjZXB0IGl0IGJlaGF2ZXMgbGlrZSBib3RoIFwiaW1tZWRpYXRlXCIgYW5kXG4vLyBcIm5vbi1pbW1lZGlhdGVcIi4gSSdsbCB0cnkgdG8gZ3JhcGggdGhlIGRpZmZlcmVuY2VzOlxuLy8gW25vcm1hbF0gPSAgICAuLi4uLi4ufFxuLy8gW2ltbWVkaWF0ZV0gPSB8Li4uLi4uLlxuLy8gW2JvdGhdID0gICAgICB8Li4uLi4ufFxuXG4vLyBUaGUgcmVhc29uIEkgd2FudCBpdCB0byBmaXJlIG9uIGJvdGggZW5kcyBvZiB0aGUgZGVib3VuY2UgaXMgZm9yIHRoZSBmb2xsb3dpbmcgc2NlbmFyaW86XG4vLyAtIGEgdXNlciB0eXBlcyBhIGxldHRlciBpbnRvIGFuIGlucHV0XG4vLyAtIHRoZSBkZWJvdW5jZXIgaXMgd2FpdGluZyAyMDBtcyB0byBzZW5kIHRoZSBhamF4IHJlcXVlc3Rcbi8vIC0gaW4gdGhlIG1lYW50aW1lIGEgdXNlciBoaXRzIHRoZSBlbnRlciBrZXlcbi8vIC0gdGhlIGRlYm91bmNlciBpcyBub3QgdXAgeWV0LCBzbyB0aGUgXCJlbnRlclwiIHJlcXVlc3Qgd2lsbCBnZXQgZmlyZWQgYmVmb3JlIHRoZSBcImtleVwiIHJlcXVlc3RcblxuLy8gTm90ZTogSSBhbHNvIGFkZGVkIGEgY2hlY2tlciBpbiBoZXJlIChcIndhc0ludGVydXB0ZWRcIikgZm9yIHRoZSB0aGUgY2FzZSBvZiBhIHVzZXJcbi8vIG9ubHkgdHlwaW5nIG9uZSBrZXksIGJ1dCB0d28gYWpheCByZXF1ZXN0cyBnZXR0aW5nIHNlbnQuXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGRlYm91bmNlKGZ1bmMsIHdhaXQpIHtcblxuICAgIHZhciB0aW1lb3V0O1xuICAgIHZhciB0aW1lc0ludGVydXB0ZWQgPSAwO1xuXHRyZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgICAgIHZhciBjb250ZXh0ID0gdGhpcywgYXJncyA9IGFyZ3VtZW50cztcblxuICAgICAgICB2YXIgY2FsbE5vdyA9ICF0aW1lb3V0O1xuXG4gICAgICAgIGlmICh0aW1lb3V0KSB7XG4gICAgICAgICAgICBjbGVhclRpbWVvdXQodGltZW91dCk7XG4gICAgICAgICAgICB0aW1lc0ludGVydXB0ZWQrK1xuICAgICAgICB9XG5cbiAgICAgICAgdGltZW91dCA9IHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdGltZW91dCA9IG51bGw7XG4gICAgICAgICAgICByZW5hbWVtZS50aW1lb3V0ID0gMFxuICAgICAgICAgICAgaWYgKHRpbWVzSW50ZXJ1cHRlZCA+IDApIHtcbiAgICAgICAgICAgICAgICBmdW5jLmFwcGx5KGNvbnRleHQsIGFyZ3MpO1xuICAgICAgICAgICAgICAgIHRpbWVzSW50ZXJ1cHRlZCA9IDBcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSwgd2FpdCk7XG4gICAgICAgIHJlbmFtZW1lLnRpbWVvdXQgPSB3YWl0XG5cblx0XHRpZiAoY2FsbE5vdykge1xuICAgICAgICAgICAgZnVuYy5hcHBseShjb250ZXh0LCBhcmdzKTtcbiAgICAgICAgfVxuXHR9O1xufTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/js/debounce.js\n");

/***/ }),

/***/ "./src/js/domHelpers.js":
/*!******************************!*\
  !*** ./src/js/domHelpers.js ***!
  \******************************/
/*! exports provided: getAttribute, hasAttribute, closestByAttribute, elByAttributeAndValue, preserveActiveElement, elsByAttributeAndValue, elByAttribute, elsByAttribute, extractDirectivesModifiersAndValuesFromEl, isComponentRootEl, transitionElementIn, transitionElementOut, shouldUpdateInputElementGivenItHasBeenUpdatedViaSync */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getAttribute\", function() { return getAttribute; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"hasAttribute\", function() { return hasAttribute; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"closestByAttribute\", function() { return closestByAttribute; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"elByAttributeAndValue\", function() { return elByAttributeAndValue; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"preserveActiveElement\", function() { return preserveActiveElement; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"elsByAttributeAndValue\", function() { return elsByAttributeAndValue; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"elByAttribute\", function() { return elByAttribute; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"elsByAttribute\", function() { return elsByAttribute; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"extractDirectivesModifiersAndValuesFromEl\", function() { return extractDirectivesModifiersAndValuesFromEl; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isComponentRootEl\", function() { return isComponentRootEl; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"transitionElementIn\", function() { return transitionElementIn; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"transitionElementOut\", function() { return transitionElementOut; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"shouldUpdateInputElementGivenItHasBeenUpdatedViaSync\", function() { return shouldUpdateInputElementGivenItHasBeenUpdatedViaSync; });\nfunction _toArray(arr) { return _arrayWithHoles(arr) || _iterableToArray(arr) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nvar prefix = __webpack_require__(/*! ./prefix.js */ \"./src/js/prefix.js\")();\n\nfunction getAttribute(el, attribute) {\n  return el.getAttribute(\"\".concat(prefix, \":\").concat(attribute));\n}\nfunction hasAttribute(el, attribute) {\n  return el.hasAttribute(\"\".concat(prefix, \":\").concat(attribute));\n}\nfunction closestByAttribute(el, attribute) {\n  return el.closest(\"[\".concat(prefix, \"\\\\:\").concat(attribute, \"]\"));\n}\nfunction elByAttributeAndValue(attribute, value) {\n  return document.querySelector(\"[\".concat(prefix, \"\\\\:\").concat(attribute, \"=\\\"\").concat(value, \"\\\"]\"));\n}\nfunction preserveActiveElement(callback) {\n  var activeElement = document.activeElement;\n  callback();\n  activeElement.focus();\n}\nfunction elsByAttributeAndValue(attribute, value, scope) {\n  return (scope || document).querySelectorAll(\"[\".concat(prefix, \"\\\\:\").concat(attribute, \"=\\\"\").concat(value, \"\\\"]\"));\n}\nfunction elByAttribute(attribute) {\n  return document.querySelector(\"[\".concat(prefix, \"\\\\:\").concat(attribute, \"]\"));\n}\nfunction elsByAttribute(attribute) {\n  return document.querySelectorAll(\"[\".concat(prefix, \"\\\\:\").concat(attribute, \"]\"));\n}\nfunction extractDirectivesModifiersAndValuesFromEl(el) {\n  var directives = {};\n  el.getAttributeNames() // Filter only the livewire directives.\n  .filter(function (name) {\n    return name.match(new RegExp(prefix + ':'));\n  }) // Parse out the event, modifiers, and value from it.\n  .forEach(function (name) {\n    var directive, modifiers;\n\n    var _name$replace$split = name.replace(new RegExp(prefix + ':'), '').split('.');\n\n    var _name$replace$split2 = _toArray(_name$replace$split);\n\n    directive = _name$replace$split2[0];\n    modifiers = _name$replace$split2.slice(1);\n    directives[directive] = {\n      modifiers: modifiers,\n      value: el.getAttribute(name)\n    };\n  });\n  return directives;\n}\nfunction isComponentRootEl(el) {\n  return hasAttribute(el, 'root-id');\n}\nfunction transitionElementIn(el) {\n  if (el.hasAttribute(\"\".concat(prefix, \":transition\"))) {\n    var transitionName = el.getAttribute(\"\".concat(prefix, \":transition\"));\n    el.classList.add(\"\".concat(transitionName, \"-enter\"));\n    el.classList.add(\"\".concat(transitionName, \"-enter-active\"));\n    setTimeout(function () {\n      el.classList.remove(\"\".concat(transitionName, \"-enter\"));\n      setTimeout(function () {\n        el.classList.remove(\"\".concat(transitionName, \"-enter-active\"));\n      }, 500);\n    }, 65);\n  }\n}\nfunction transitionElementOut(el) {\n  if (el.hasAttribute(\"\".concat(prefix, \":transition\"))) {\n    var transitionName = el.getAttribute(\"\".concat(prefix, \":transition\"));\n    el.classList.add(\"\".concat(transitionName, \"-leave-active\"));\n    setTimeout(function () {\n      el.classList.add(\"\".concat(transitionName, \"-leave-to\"));\n      setTimeout(function () {\n        el.classList.remove(\"\".concat(transitionName, \"-leave-active\"));\n        el.classList.remove(\"\".concat(transitionName, \"-leave-to\"));\n        el.remove();\n      }, 500);\n    }, 65);\n    return false;\n  }\n\n  return true;\n}\nfunction shouldUpdateInputElementGivenItHasBeenUpdatedViaSync(el, dirtyInputs) {\n  // This will need work. But is essentially \"input persistance\"\n  var isInput = el.tagName === 'INPUT' || el.tagName === 'TEXTAREA';\n\n  if (isInput) {\n    if (el.type === 'submit') {\n      return true;\n    }\n\n    var isSync = hasAttribute(el, 'sync');\n\n    if (isSync) {\n      var syncName = getAttribute(el, 'sync');\n\n      if (Array.from(dirtyInputs).includes(syncName)) {\n        return true;\n      }\n\n      {\n        return false;\n      }\n    }\n\n    return false;\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/domHelpers.js\n");

/***/ }),

/***/ "./src/js/domWalker.js":
/*!*****************************!*\
  !*** ./src/js/domWalker.js ***!
  \*****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// A little DOM walker I made, because document.TreeWalker isn't good at\n// conditionally not-traversing down a node.\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  root: null,\n  callback: null,\n  depth: 0,\n  walk: function walk(root, callback) {\n    this.root = root;\n    this.callback = callback;\n    return this.start(root);\n  },\n  start: function start(node) {\n    if (this.callback(node) === false) {\n      return this.goToNextSiblingOrUpToParent(node);\n    }\n\n    var child = this.getFirstChild(node);\n\n    if (child) {\n      this.depth++;\n      return this.start(child);\n    } else {\n      return this.goToNextSiblingOrUpToParent(node);\n    }\n  },\n  goToNextSiblingOrUpToParent: function goToNextSiblingOrUpToParent(node) {\n    var sibling = this.getNextSibling(node);\n\n    if (sibling) {\n      return this.start(sibling);\n    } else {\n      if (this.depth === 1) {\n        return;\n      } else {\n        this.depth--;\n        return this.goToNextSiblingOrUpToParent(node.parentNode);\n      }\n    }\n  },\n  getFirstChild: function getFirstChild(node) {\n    var child = node.firstChild;\n\n    if (child && child.nodeType !== Node.ELEMENT_NODE) {\n      return this.getNextSibling(child);\n    }\n\n    return child;\n  },\n  getNextSibling: function getNextSibling(node) {\n    var sibling = node.nextSibling;\n\n    if (sibling && sibling.nodeType !== Node.ELEMENT_NODE) {\n      return this.getNextSibling(sibling);\n    }\n\n    return sibling;\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvZG9tV2Fsa2VyLmpzPzk5N2IiXSwibmFtZXMiOlsicm9vdCIsImNhbGxiYWNrIiwiZGVwdGgiLCJ3YWxrIiwic3RhcnQiLCJub2RlIiwiZ29Ub05leHRTaWJsaW5nT3JVcFRvUGFyZW50IiwiY2hpbGQiLCJnZXRGaXJzdENoaWxkIiwic2libGluZyIsImdldE5leHRTaWJsaW5nIiwicGFyZW50Tm9kZSIsImZpcnN0Q2hpbGQiLCJub2RlVHlwZSIsIk5vZGUiLCJFTEVNRU5UX05PREUiLCJuZXh0U2libGluZyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUNBO0FBRWU7QUFDWEEsTUFBSSxFQUFFLElBREs7QUFFWEMsVUFBUSxFQUFFLElBRkM7QUFHWEMsT0FBSyxFQUFFLENBSEk7QUFLWEMsTUFMVyxnQkFLTkgsSUFMTSxFQUtBQyxRQUxBLEVBS1U7QUFDakIsU0FBS0QsSUFBTCxHQUFZQSxJQUFaO0FBQ0EsU0FBS0MsUUFBTCxHQUFnQkEsUUFBaEI7QUFDQSxXQUFPLEtBQUtHLEtBQUwsQ0FBV0osSUFBWCxDQUFQO0FBQ0gsR0FUVTtBQVdYSSxPQVhXLGlCQVdMQyxJQVhLLEVBV0M7QUFDUixRQUFJLEtBQUtKLFFBQUwsQ0FBY0ksSUFBZCxNQUF3QixLQUE1QixFQUFtQztBQUMvQixhQUFPLEtBQUtDLDJCQUFMLENBQWlDRCxJQUFqQyxDQUFQO0FBQ0g7O0FBRUQsUUFBSUUsS0FBSyxHQUFHLEtBQUtDLGFBQUwsQ0FBbUJILElBQW5CLENBQVo7O0FBQ0EsUUFBSUUsS0FBSixFQUFXO0FBQ1AsV0FBS0wsS0FBTDtBQUNBLGFBQU8sS0FBS0UsS0FBTCxDQUFXRyxLQUFYLENBQVA7QUFDSCxLQUhELE1BR087QUFDSCxhQUFPLEtBQUtELDJCQUFMLENBQWlDRCxJQUFqQyxDQUFQO0FBQ0g7QUFDSixHQXZCVTtBQXlCWEMsNkJBekJXLHVDQXlCaUJELElBekJqQixFQXlCdUI7QUFDOUIsUUFBSUksT0FBTyxHQUFHLEtBQUtDLGNBQUwsQ0FBb0JMLElBQXBCLENBQWQ7O0FBQ0EsUUFBSUksT0FBSixFQUFhO0FBQ1QsYUFBTyxLQUFLTCxLQUFMLENBQVdLLE9BQVgsQ0FBUDtBQUNILEtBRkQsTUFFTztBQUNILFVBQUksS0FBS1AsS0FBTCxLQUFlLENBQW5CLEVBQXNCO0FBQ2xCO0FBQ0gsT0FGRCxNQUVPO0FBQ0gsYUFBS0EsS0FBTDtBQUNBLGVBQU8sS0FBS0ksMkJBQUwsQ0FBaUNELElBQUksQ0FBQ00sVUFBdEMsQ0FBUDtBQUNIO0FBQ0o7QUFDSixHQXJDVTtBQXVDWEgsZUF2Q1cseUJBdUNHSCxJQXZDSCxFQXVDUztBQUNoQixRQUFNRSxLQUFLLEdBQUdGLElBQUksQ0FBQ08sVUFBbkI7O0FBRUEsUUFBSUwsS0FBSyxJQUFJQSxLQUFLLENBQUNNLFFBQU4sS0FBbUJDLElBQUksQ0FBQ0MsWUFBckMsRUFBbUQ7QUFDL0MsYUFBTyxLQUFLTCxjQUFMLENBQW9CSCxLQUFwQixDQUFQO0FBQ0g7O0FBQ0QsV0FBT0EsS0FBUDtBQUNILEdBOUNVO0FBZ0RYRyxnQkFoRFcsMEJBZ0RJTCxJQWhESixFQWdEVTtBQUNqQixRQUFNSSxPQUFPLEdBQUdKLElBQUksQ0FBQ1csV0FBckI7O0FBRUEsUUFBSVAsT0FBTyxJQUFJQSxPQUFPLENBQUNJLFFBQVIsS0FBcUJDLElBQUksQ0FBQ0MsWUFBekMsRUFBdUQ7QUFDbkQsYUFBTyxLQUFLTCxjQUFMLENBQW9CRCxPQUFwQixDQUFQO0FBQ0g7O0FBQ0QsV0FBT0EsT0FBUDtBQUNIO0FBdkRVLENBQWYiLCJmaWxlIjoiLi9zcmMvanMvZG9tV2Fsa2VyLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gQSBsaXR0bGUgRE9NIHdhbGtlciBJIG1hZGUsIGJlY2F1c2UgZG9jdW1lbnQuVHJlZVdhbGtlciBpc24ndCBnb29kIGF0XG4vLyBjb25kaXRpb25hbGx5IG5vdC10cmF2ZXJzaW5nIGRvd24gYSBub2RlLlxuXG5leHBvcnQgZGVmYXVsdCB7XG4gICAgcm9vdDogbnVsbCxcbiAgICBjYWxsYmFjazogbnVsbCxcbiAgICBkZXB0aDogMCxcblxuICAgIHdhbGsocm9vdCwgY2FsbGJhY2spIHtcbiAgICAgICAgdGhpcy5yb290ID0gcm9vdFxuICAgICAgICB0aGlzLmNhbGxiYWNrID0gY2FsbGJhY2tcbiAgICAgICAgcmV0dXJuIHRoaXMuc3RhcnQocm9vdClcbiAgICB9LFxuXG4gICAgc3RhcnQobm9kZSkge1xuICAgICAgICBpZiAodGhpcy5jYWxsYmFjayhub2RlKSA9PT0gZmFsc2UpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmdvVG9OZXh0U2libGluZ09yVXBUb1BhcmVudChub2RlKVxuICAgICAgICB9XG5cbiAgICAgICAgbGV0IGNoaWxkID0gdGhpcy5nZXRGaXJzdENoaWxkKG5vZGUpXG4gICAgICAgIGlmIChjaGlsZCkge1xuICAgICAgICAgICAgdGhpcy5kZXB0aCsrXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5zdGFydChjaGlsZClcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmdvVG9OZXh0U2libGluZ09yVXBUb1BhcmVudChub2RlKVxuICAgICAgICB9XG4gICAgfSxcblxuICAgIGdvVG9OZXh0U2libGluZ09yVXBUb1BhcmVudChub2RlKSB7XG4gICAgICAgIGxldCBzaWJsaW5nID0gdGhpcy5nZXROZXh0U2libGluZyhub2RlKVxuICAgICAgICBpZiAoc2libGluZykge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuc3RhcnQoc2libGluZylcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGlmICh0aGlzLmRlcHRoID09PSAxKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuXG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHRoaXMuZGVwdGgtLVxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmdvVG9OZXh0U2libGluZ09yVXBUb1BhcmVudChub2RlLnBhcmVudE5vZGUpXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9LFxuXG4gICAgZ2V0Rmlyc3RDaGlsZChub2RlKSB7XG4gICAgICAgIGNvbnN0IGNoaWxkID0gbm9kZS5maXJzdENoaWxkXG5cbiAgICAgICAgaWYgKGNoaWxkICYmIGNoaWxkLm5vZGVUeXBlICE9PSBOb2RlLkVMRU1FTlRfTk9ERSkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuZ2V0TmV4dFNpYmxpbmcoY2hpbGQpXG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGNoaWxkXG4gICAgfSxcblxuICAgIGdldE5leHRTaWJsaW5nKG5vZGUpIHtcbiAgICAgICAgY29uc3Qgc2libGluZyA9IG5vZGUubmV4dFNpYmxpbmdcblxuICAgICAgICBpZiAoc2libGluZyAmJiBzaWJsaW5nLm5vZGVUeXBlICE9PSBOb2RlLkVMRU1FTlRfTk9ERSkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuZ2V0TmV4dFNpYmxpbmcoc2libGluZylcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gc2libGluZ1xuICAgIH0sXG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/js/domWalker.js\n");

/***/ }),

/***/ "./src/js/httpConnection.js":
/*!**********************************!*\
  !*** ./src/js/httpConnection.js ***!
  \**********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n!(function webpackMissingModule() { var e = new Error(\"Cannot find module 'axios'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }());\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  onMessage: null,\n  lastTimeARequestWasSent: null,\n  init: function init() {//\n  },\n  sendMessage: function sendMessage(payload) {\n    var _this = this;\n\n    var timestamp = new Date().valueOf();\n    this.lastTimeARequestWasSent = timestamp; // @todo - Figure out not relying on app's csrf stuff in bootstrap.js\n\n    !(function webpackMissingModule() { var e = new Error(\"Cannot find module 'axios'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }()).post('/livewire/message', payload).then(function (response) {\n      if (timestamp < _this.lastTimeARequestWasSent) {\n        return;\n      }\n\n      _this.onMessage.call(_this, response.data);\n    }); // @todo: catch 419 session expired.\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvaHR0cENvbm5lY3Rpb24uanM/OGEzYyJdLCJuYW1lcyI6WyJvbk1lc3NhZ2UiLCJsYXN0VGltZUFSZXF1ZXN0V2FzU2VudCIsImluaXQiLCJzZW5kTWVzc2FnZSIsInBheWxvYWQiLCJ0aW1lc3RhbXAiLCJEYXRlIiwidmFsdWVPZiIsIkF4aW9zIiwicG9zdCIsInRoZW4iLCJyZXNwb25zZSIsImNhbGwiLCJkYXRhIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFFZTtBQUNYQSxXQUFTLEVBQUUsSUFEQTtBQUVYQyx5QkFBdUIsRUFBRSxJQUZkO0FBSVhDLE1BSlcsa0JBSUosQ0FDSDtBQUNILEdBTlU7QUFRWEMsYUFSVyx1QkFRQ0MsT0FSRCxFQVFVO0FBQUE7O0FBQ2pCLFFBQUlDLFNBQVMsR0FBSSxJQUFJQyxJQUFKLEVBQUQsQ0FBYUMsT0FBYixFQUFoQjtBQUNBLFNBQUtOLHVCQUFMLEdBQStCSSxTQUEvQixDQUZpQixDQUlqQjs7QUFDQUcsbUlBQUssQ0FBQ0MsSUFBTixDQUFXLG1CQUFYLEVBQWdDTCxPQUFoQyxFQUNLTSxJQURMLENBQ1UsVUFBQUMsUUFBUSxFQUFJO0FBQ2QsVUFBSU4sU0FBUyxHQUFHLEtBQUksQ0FBQ0osdUJBQXJCLEVBQThDO0FBQzFDO0FBQ0g7O0FBRUQsV0FBSSxDQUFDRCxTQUFMLENBQWVZLElBQWYsQ0FBb0IsS0FBcEIsRUFBMEJELFFBQVEsQ0FBQ0UsSUFBbkM7QUFDSCxLQVBMLEVBTGlCLENBYWI7QUFDUDtBQXRCVSxDQUFmIiwiZmlsZSI6Ii4vc3JjL2pzL2h0dHBDb25uZWN0aW9uLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEF4aW9zIGZyb20gXCJheGlvc1wiO1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gICAgb25NZXNzYWdlOiBudWxsLFxuICAgIGxhc3RUaW1lQVJlcXVlc3RXYXNTZW50OiBudWxsLFxuXG4gICAgaW5pdCgpIHtcbiAgICAgICAgLy9cbiAgICB9LFxuXG4gICAgc2VuZE1lc3NhZ2UocGF5bG9hZCkge1xuICAgICAgICB2YXIgdGltZXN0YW1wID0gKG5ldyBEYXRlKCkpLnZhbHVlT2YoKTtcbiAgICAgICAgdGhpcy5sYXN0VGltZUFSZXF1ZXN0V2FzU2VudCA9IHRpbWVzdGFtcDtcblxuICAgICAgICAvLyBAdG9kbyAtIEZpZ3VyZSBvdXQgbm90IHJlbHlpbmcgb24gYXBwJ3MgY3NyZiBzdHVmZiBpbiBib290c3RyYXAuanNcbiAgICAgICAgQXhpb3MucG9zdCgnL2xpdmV3aXJlL21lc3NhZ2UnLCBwYXlsb2FkKVxuICAgICAgICAgICAgLnRoZW4ocmVzcG9uc2UgPT4ge1xuICAgICAgICAgICAgICAgIGlmICh0aW1lc3RhbXAgPCB0aGlzLmxhc3RUaW1lQVJlcXVlc3RXYXNTZW50KSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVyblxuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIHRoaXMub25NZXNzYWdlLmNhbGwodGhpcywgcmVzcG9uc2UuZGF0YSlcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAvLyBAdG9kbzogY2F0Y2ggNDE5IHNlc3Npb24gZXhwaXJlZC5cbiAgICB9LFxufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/js/httpConnection.js\n");

/***/ }),

/***/ "./src/js/index.js":
/*!*************************!*\
  !*** ./src/js/index.js ***!
  \*************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _ComponentManager__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ComponentManager */ \"./src/js/ComponentManager.js\");\n/* harmony import */ var _httpConnection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./httpConnection */ \"./src/js/httpConnection.js\");\n/* harmony import */ var _webSocket__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./webSocket */ \"./src/js/webSocket.js\");\n/* harmony import */ var _NodeInitializer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./NodeInitializer */ \"./src/js/NodeInitializer.js\");\n/* harmony import */ var _Connection__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Connection */ \"./src/js/Connection.js\");\n\n\n\n\n\nvar livewire = {\n  start: function start(options) {\n    if (!options) {\n      options = {};\n    }\n\n    var driver = options.driver || 'http';\n\n    if (driver === 'websockets') {\n      var driverInstance = _webSocket__WEBPACK_IMPORTED_MODULE_2__[\"default\"];\n    } else {\n      var driverInstance = _httpConnection__WEBPACK_IMPORTED_MODULE_1__[\"default\"];\n    }\n\n    var nodeInitializer = new _NodeInitializer__WEBPACK_IMPORTED_MODULE_3__[\"default\"](new _Connection__WEBPACK_IMPORTED_MODULE_4__[\"default\"](driverInstance));\n    var roots = new _ComponentManager__WEBPACK_IMPORTED_MODULE_0__[\"default\"](nodeInitializer);\n    roots.init();\n  }\n};\n\nif (!window.Livewire) {\n  window.Livewire = livewire;\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (livewire);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvaW5kZXguanM/N2JhNSJdLCJuYW1lcyI6WyJsaXZld2lyZSIsInN0YXJ0Iiwib3B0aW9ucyIsImRyaXZlciIsImRyaXZlckluc3RhbmNlIiwid2Vic29ja2V0cyIsImh0dHAiLCJub2RlSW5pdGlhbGl6ZXIiLCJOb2RlSW5pdGlhbGl6ZXIiLCJDb25uZWN0aW9uIiwicm9vdHMiLCJDb21wb25lbnRNYW5hZ2VyIiwiaW5pdCIsIndpbmRvdyIsIkxpdmV3aXJlIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUEsSUFBTUEsUUFBUSxHQUFHO0FBQ2JDLE9BRGEsaUJBQ1BDLE9BRE8sRUFDRTtBQUNYLFFBQUksQ0FBRUEsT0FBTixFQUFlO0FBQ1hBLGFBQU8sR0FBRyxFQUFWO0FBQ0g7O0FBRUQsUUFBTUMsTUFBTSxHQUFHRCxPQUFPLENBQUNDLE1BQVIsSUFBa0IsTUFBakM7O0FBRUEsUUFBSUEsTUFBTSxLQUFLLFlBQWYsRUFBNkI7QUFDekIsVUFBSUMsY0FBYyxHQUFHQyxrREFBckI7QUFDSCxLQUZELE1BRU87QUFDSCxVQUFJRCxjQUFjLEdBQUdFLHVEQUFyQjtBQUNIOztBQUVELFFBQU1DLGVBQWUsR0FBRyxJQUFJQyx3REFBSixDQUFvQixJQUFJQyxtREFBSixDQUFlTCxjQUFmLENBQXBCLENBQXhCO0FBRUEsUUFBTU0sS0FBSyxHQUFHLElBQUlDLHlEQUFKLENBQXFCSixlQUFyQixDQUFkO0FBRUFHLFNBQUssQ0FBQ0UsSUFBTjtBQUNIO0FBbkJZLENBQWpCOztBQXNCQSxJQUFJLENBQUNDLE1BQU0sQ0FBQ0MsUUFBWixFQUFzQjtBQUNsQkQsUUFBTSxDQUFDQyxRQUFQLEdBQWtCZCxRQUFsQjtBQUNIOztBQUVjQSx1RUFBZiIsImZpbGUiOiIuL3NyYy9qcy9pbmRleC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBDb21wb25lbnRNYW5hZ2VyIGZyb20gJy4vQ29tcG9uZW50TWFuYWdlcidcbmltcG9ydCBodHRwIGZyb20gJy4vaHR0cENvbm5lY3Rpb24nXG5pbXBvcnQgd2Vic29ja2V0cyBmcm9tICcuL3dlYlNvY2tldCdcbmltcG9ydCBOb2RlSW5pdGlhbGl6ZXIgZnJvbSAnLi9Ob2RlSW5pdGlhbGl6ZXInXG5pbXBvcnQgQ29ubmVjdGlvbiBmcm9tICcuL0Nvbm5lY3Rpb24nXG5cbmNvbnN0IGxpdmV3aXJlID0ge1xuICAgIHN0YXJ0KG9wdGlvbnMpIHtcbiAgICAgICAgaWYgKCEgb3B0aW9ucykge1xuICAgICAgICAgICAgb3B0aW9ucyA9IHt9O1xuICAgICAgICB9XG5cbiAgICAgICAgY29uc3QgZHJpdmVyID0gb3B0aW9ucy5kcml2ZXIgfHwgJ2h0dHAnXG5cbiAgICAgICAgaWYgKGRyaXZlciA9PT0gJ3dlYnNvY2tldHMnKSB7XG4gICAgICAgICAgICB2YXIgZHJpdmVySW5zdGFuY2UgPSB3ZWJzb2NrZXRzXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB2YXIgZHJpdmVySW5zdGFuY2UgPSBodHRwXG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCBub2RlSW5pdGlhbGl6ZXIgPSBuZXcgTm9kZUluaXRpYWxpemVyKG5ldyBDb25uZWN0aW9uKGRyaXZlckluc3RhbmNlKSlcblxuICAgICAgICBjb25zdCByb290cyA9IG5ldyBDb21wb25lbnRNYW5hZ2VyKG5vZGVJbml0aWFsaXplcilcblxuICAgICAgICByb290cy5pbml0KClcbiAgICB9XG59XG5cbmlmICghd2luZG93LkxpdmV3aXJlKSB7XG4gICAgd2luZG93LkxpdmV3aXJlID0gbGl2ZXdpcmVcbn1cblxuZXhwb3J0IGRlZmF1bHQgbGl2ZXdpcmVcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/js/index.js\n");

/***/ }),

/***/ "./src/js/morphdom/index.js":
/*!**********************************!*\
  !*** ./src/js/morphdom/index.js ***!
  \**********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _morphAttrs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./morphAttrs */ \"./src/js/morphdom/morphAttrs.js\");\n/* harmony import */ var _morphdom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./morphdom */ \"./src/js/morphdom/morphdom.js\");\n\n\nvar morphdom = Object(_morphdom__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(_morphAttrs__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n/* harmony default export */ __webpack_exports__[\"default\"] = (morphdom);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvbW9ycGhkb20vaW5kZXguanM/ZDdmMyJdLCJuYW1lcyI6WyJtb3JwaGRvbSIsIm1vcnBoZG9tRmFjdG9yeSIsIm1vcnBoQXR0cnMiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFFQSxJQUFJQSxRQUFRLEdBQUdDLHlEQUFlLENBQUNDLG1EQUFELENBQTlCO0FBRWVGLHVFQUFmIiwiZmlsZSI6Ii4vc3JjL2pzL21vcnBoZG9tL2luZGV4LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG1vcnBoQXR0cnMgZnJvbSAnLi9tb3JwaEF0dHJzJztcbmltcG9ydCBtb3JwaGRvbUZhY3RvcnkgZnJvbSAnLi9tb3JwaGRvbSc7XG5cbnZhciBtb3JwaGRvbSA9IG1vcnBoZG9tRmFjdG9yeShtb3JwaEF0dHJzKTtcblxuZXhwb3J0IGRlZmF1bHQgbW9ycGhkb207Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/js/morphdom/index.js\n");

/***/ }),

/***/ "./src/js/morphdom/morphAttrs.js":
/*!***************************************!*\
  !*** ./src/js/morphdom/morphAttrs.js ***!
  \***************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return morphAttrs; });\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util */ \"./src/js/morphdom/util.js\");\n\nfunction morphAttrs(fromNode, toNode) {\n  var attrs = toNode.attributes;\n  var i;\n  var attr;\n  var attrName;\n  var attrNamespaceURI;\n  var attrValue;\n  var fromValue;\n\n  for (i = attrs.length - 1; i >= 0; --i) {\n    attr = attrs[i];\n    attrName = attr.name;\n    attrNamespaceURI = attr.namespaceURI;\n    attrValue = attr.value;\n\n    if (attrNamespaceURI) {\n      attrName = attr.localName || attrName;\n      fromValue = fromNode.getAttributeNS(attrNamespaceURI, attrName);\n\n      if (fromValue !== attrValue) {\n        fromNode.setAttributeNS(attrNamespaceURI, attrName, attrValue);\n      }\n    } else {\n      fromValue = fromNode.getAttribute(attrName);\n\n      if (fromValue !== attrValue) {\n        fromNode.setAttribute(attrName, attrValue);\n      }\n    }\n  } // Remove any extra attributes found on the original DOM element that\n  // weren't found on the target element.\n\n\n  attrs = fromNode.attributes;\n\n  for (i = attrs.length - 1; i >= 0; --i) {\n    attr = attrs[i];\n\n    if (attr.specified !== false) {\n      attrName = attr.name;\n      attrNamespaceURI = attr.namespaceURI;\n\n      if (attrNamespaceURI) {\n        attrName = attr.localName || attrName;\n\n        if (!Object(_util__WEBPACK_IMPORTED_MODULE_0__[\"hasAttributeNS\"])(toNode, attrNamespaceURI, attrName)) {\n          fromNode.removeAttributeNS(attrNamespaceURI, attrName);\n        }\n      } else {\n        if (!Object(_util__WEBPACK_IMPORTED_MODULE_0__[\"hasAttributeNS\"])(toNode, null, attrName)) {\n          fromNode.removeAttribute(attrName);\n        }\n      }\n    }\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvbW9ycGhkb20vbW9ycGhBdHRycy5qcz9kNjI4Il0sIm5hbWVzIjpbIm1vcnBoQXR0cnMiLCJmcm9tTm9kZSIsInRvTm9kZSIsImF0dHJzIiwiYXR0cmlidXRlcyIsImkiLCJhdHRyIiwiYXR0ck5hbWUiLCJhdHRyTmFtZXNwYWNlVVJJIiwiYXR0clZhbHVlIiwiZnJvbVZhbHVlIiwibGVuZ3RoIiwibmFtZSIsIm5hbWVzcGFjZVVSSSIsInZhbHVlIiwibG9jYWxOYW1lIiwiZ2V0QXR0cmlidXRlTlMiLCJzZXRBdHRyaWJ1dGVOUyIsImdldEF0dHJpYnV0ZSIsInNldEF0dHJpYnV0ZSIsInNwZWNpZmllZCIsImhhc0F0dHJpYnV0ZU5TIiwicmVtb3ZlQXR0cmlidXRlTlMiLCJyZW1vdmVBdHRyaWJ1dGUiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBRWUsU0FBU0EsVUFBVCxDQUFvQkMsUUFBcEIsRUFBOEJDLE1BQTlCLEVBQXNDO0FBQ2pELE1BQUlDLEtBQUssR0FBR0QsTUFBTSxDQUFDRSxVQUFuQjtBQUNBLE1BQUlDLENBQUo7QUFDQSxNQUFJQyxJQUFKO0FBQ0EsTUFBSUMsUUFBSjtBQUNBLE1BQUlDLGdCQUFKO0FBQ0EsTUFBSUMsU0FBSjtBQUNBLE1BQUlDLFNBQUo7O0FBRUEsT0FBS0wsQ0FBQyxHQUFHRixLQUFLLENBQUNRLE1BQU4sR0FBZSxDQUF4QixFQUEyQk4sQ0FBQyxJQUFJLENBQWhDLEVBQW1DLEVBQUVBLENBQXJDLEVBQXdDO0FBQ3BDQyxRQUFJLEdBQUdILEtBQUssQ0FBQ0UsQ0FBRCxDQUFaO0FBQ0FFLFlBQVEsR0FBR0QsSUFBSSxDQUFDTSxJQUFoQjtBQUNBSixvQkFBZ0IsR0FBR0YsSUFBSSxDQUFDTyxZQUF4QjtBQUNBSixhQUFTLEdBQUdILElBQUksQ0FBQ1EsS0FBakI7O0FBRUEsUUFBSU4sZ0JBQUosRUFBc0I7QUFDbEJELGNBQVEsR0FBR0QsSUFBSSxDQUFDUyxTQUFMLElBQWtCUixRQUE3QjtBQUNBRyxlQUFTLEdBQUdULFFBQVEsQ0FBQ2UsY0FBVCxDQUF3QlIsZ0JBQXhCLEVBQTBDRCxRQUExQyxDQUFaOztBQUVBLFVBQUlHLFNBQVMsS0FBS0QsU0FBbEIsRUFBNkI7QUFDekJSLGdCQUFRLENBQUNnQixjQUFULENBQXdCVCxnQkFBeEIsRUFBMENELFFBQTFDLEVBQW9ERSxTQUFwRDtBQUNIO0FBQ0osS0FQRCxNQU9PO0FBQ0hDLGVBQVMsR0FBR1QsUUFBUSxDQUFDaUIsWUFBVCxDQUFzQlgsUUFBdEIsQ0FBWjs7QUFFQSxVQUFJRyxTQUFTLEtBQUtELFNBQWxCLEVBQTZCO0FBQ3pCUixnQkFBUSxDQUFDa0IsWUFBVCxDQUFzQlosUUFBdEIsRUFBZ0NFLFNBQWhDO0FBQ0g7QUFDSjtBQUNKLEdBN0JnRCxDQStCakQ7QUFDQTs7O0FBQ0FOLE9BQUssR0FBR0YsUUFBUSxDQUFDRyxVQUFqQjs7QUFFQSxPQUFLQyxDQUFDLEdBQUdGLEtBQUssQ0FBQ1EsTUFBTixHQUFlLENBQXhCLEVBQTJCTixDQUFDLElBQUksQ0FBaEMsRUFBbUMsRUFBRUEsQ0FBckMsRUFBd0M7QUFDcENDLFFBQUksR0FBR0gsS0FBSyxDQUFDRSxDQUFELENBQVo7O0FBQ0EsUUFBSUMsSUFBSSxDQUFDYyxTQUFMLEtBQW1CLEtBQXZCLEVBQThCO0FBQzFCYixjQUFRLEdBQUdELElBQUksQ0FBQ00sSUFBaEI7QUFDQUosc0JBQWdCLEdBQUdGLElBQUksQ0FBQ08sWUFBeEI7O0FBRUEsVUFBSUwsZ0JBQUosRUFBc0I7QUFDbEJELGdCQUFRLEdBQUdELElBQUksQ0FBQ1MsU0FBTCxJQUFrQlIsUUFBN0I7O0FBRUEsWUFBSSxDQUFDYyw0REFBYyxDQUFDbkIsTUFBRCxFQUFTTSxnQkFBVCxFQUEyQkQsUUFBM0IsQ0FBbkIsRUFBeUQ7QUFDckROLGtCQUFRLENBQUNxQixpQkFBVCxDQUEyQmQsZ0JBQTNCLEVBQTZDRCxRQUE3QztBQUNIO0FBQ0osT0FORCxNQU1PO0FBQ0gsWUFBSSxDQUFDYyw0REFBYyxDQUFDbkIsTUFBRCxFQUFTLElBQVQsRUFBZUssUUFBZixDQUFuQixFQUE2QztBQUN6Q04sa0JBQVEsQ0FBQ3NCLGVBQVQsQ0FBeUJoQixRQUF6QjtBQUNIO0FBQ0o7QUFDSjtBQUNKO0FBQ0oiLCJmaWxlIjoiLi9zcmMvanMvbW9ycGhkb20vbW9ycGhBdHRycy5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGhhc0F0dHJpYnV0ZU5TIH0gZnJvbSAnLi91dGlsJztcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gbW9ycGhBdHRycyhmcm9tTm9kZSwgdG9Ob2RlKSB7XG4gICAgdmFyIGF0dHJzID0gdG9Ob2RlLmF0dHJpYnV0ZXM7XG4gICAgdmFyIGk7XG4gICAgdmFyIGF0dHI7XG4gICAgdmFyIGF0dHJOYW1lO1xuICAgIHZhciBhdHRyTmFtZXNwYWNlVVJJO1xuICAgIHZhciBhdHRyVmFsdWU7XG4gICAgdmFyIGZyb21WYWx1ZTtcblxuICAgIGZvciAoaSA9IGF0dHJzLmxlbmd0aCAtIDE7IGkgPj0gMDsgLS1pKSB7XG4gICAgICAgIGF0dHIgPSBhdHRyc1tpXTtcbiAgICAgICAgYXR0ck5hbWUgPSBhdHRyLm5hbWU7XG4gICAgICAgIGF0dHJOYW1lc3BhY2VVUkkgPSBhdHRyLm5hbWVzcGFjZVVSSTtcbiAgICAgICAgYXR0clZhbHVlID0gYXR0ci52YWx1ZTtcblxuICAgICAgICBpZiAoYXR0ck5hbWVzcGFjZVVSSSkge1xuICAgICAgICAgICAgYXR0ck5hbWUgPSBhdHRyLmxvY2FsTmFtZSB8fCBhdHRyTmFtZTtcbiAgICAgICAgICAgIGZyb21WYWx1ZSA9IGZyb21Ob2RlLmdldEF0dHJpYnV0ZU5TKGF0dHJOYW1lc3BhY2VVUkksIGF0dHJOYW1lKTtcblxuICAgICAgICAgICAgaWYgKGZyb21WYWx1ZSAhPT0gYXR0clZhbHVlKSB7XG4gICAgICAgICAgICAgICAgZnJvbU5vZGUuc2V0QXR0cmlidXRlTlMoYXR0ck5hbWVzcGFjZVVSSSwgYXR0ck5hbWUsIGF0dHJWYWx1ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBmcm9tVmFsdWUgPSBmcm9tTm9kZS5nZXRBdHRyaWJ1dGUoYXR0ck5hbWUpO1xuXG4gICAgICAgICAgICBpZiAoZnJvbVZhbHVlICE9PSBhdHRyVmFsdWUpIHtcbiAgICAgICAgICAgICAgICBmcm9tTm9kZS5zZXRBdHRyaWJ1dGUoYXR0ck5hbWUsIGF0dHJWYWx1ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBSZW1vdmUgYW55IGV4dHJhIGF0dHJpYnV0ZXMgZm91bmQgb24gdGhlIG9yaWdpbmFsIERPTSBlbGVtZW50IHRoYXRcbiAgICAvLyB3ZXJlbid0IGZvdW5kIG9uIHRoZSB0YXJnZXQgZWxlbWVudC5cbiAgICBhdHRycyA9IGZyb21Ob2RlLmF0dHJpYnV0ZXM7XG5cbiAgICBmb3IgKGkgPSBhdHRycy5sZW5ndGggLSAxOyBpID49IDA7IC0taSkge1xuICAgICAgICBhdHRyID0gYXR0cnNbaV07XG4gICAgICAgIGlmIChhdHRyLnNwZWNpZmllZCAhPT0gZmFsc2UpIHtcbiAgICAgICAgICAgIGF0dHJOYW1lID0gYXR0ci5uYW1lO1xuICAgICAgICAgICAgYXR0ck5hbWVzcGFjZVVSSSA9IGF0dHIubmFtZXNwYWNlVVJJO1xuXG4gICAgICAgICAgICBpZiAoYXR0ck5hbWVzcGFjZVVSSSkge1xuICAgICAgICAgICAgICAgIGF0dHJOYW1lID0gYXR0ci5sb2NhbE5hbWUgfHwgYXR0ck5hbWU7XG5cbiAgICAgICAgICAgICAgICBpZiAoIWhhc0F0dHJpYnV0ZU5TKHRvTm9kZSwgYXR0ck5hbWVzcGFjZVVSSSwgYXR0ck5hbWUpKSB7XG4gICAgICAgICAgICAgICAgICAgIGZyb21Ob2RlLnJlbW92ZUF0dHJpYnV0ZU5TKGF0dHJOYW1lc3BhY2VVUkksIGF0dHJOYW1lKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGlmICghaGFzQXR0cmlidXRlTlModG9Ob2RlLCBudWxsLCBhdHRyTmFtZSkpIHtcbiAgICAgICAgICAgICAgICAgICAgZnJvbU5vZGUucmVtb3ZlQXR0cmlidXRlKGF0dHJOYW1lKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/js/morphdom/morphAttrs.js\n");

/***/ }),

/***/ "./src/js/morphdom/morphdom.js":
/*!*************************************!*\
  !*** ./src/js/morphdom/morphdom.js ***!
  \*************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return morphdomFactory; });\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util */ \"./src/js/morphdom/util.js\");\n/* harmony import */ var _specialElHandlers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./specialElHandlers */ \"./src/js/morphdom/specialElHandlers.js\");\n\n\n\n\nvar ELEMENT_NODE = 1;\nvar TEXT_NODE = 3;\nvar COMMENT_NODE = 8;\n\nfunction noop() {}\n\nfunction defaultGetNodeKey(node) {\n  return node.id;\n}\n\nfunction morphdomFactory(morphAttrs) {\n  return function morphdom(fromNode, toNode, options) {\n    if (!options) {\n      options = {};\n    }\n\n    if (typeof toNode === 'string') {\n      if (fromNode.nodeName === '#document' || fromNode.nodeName === 'HTML') {\n        var toNodeHtml = toNode;\n        toNode = _util__WEBPACK_IMPORTED_MODULE_0__[\"doc\"].createElement('html');\n        toNode.innerHTML = toNodeHtml;\n      } else {\n        toNode = Object(_util__WEBPACK_IMPORTED_MODULE_0__[\"toElement\"])(toNode);\n      }\n    }\n\n    var getNodeKey = options.getNodeKey || defaultGetNodeKey;\n    var onBeforeNodeAdded = options.onBeforeNodeAdded || noop;\n    var onNodeAdded = options.onNodeAdded || noop;\n    var onBeforeElUpdated = options.onBeforeElUpdated || noop;\n    var onElUpdated = options.onElUpdated || noop;\n    var onBeforeNodeDiscarded = options.onBeforeNodeDiscarded || noop;\n    var onNodeDiscarded = options.onNodeDiscarded || noop;\n    var onBeforeElChildrenUpdated = options.onBeforeElChildrenUpdated || noop;\n    var childrenOnly = options.childrenOnly === true; // This object is used as a lookup to quickly find all keyed elements in the original DOM tree.\n\n    var fromNodesLookup = {};\n    var keyedRemovalList;\n\n    function addKeyedRemoval(key) {\n      if (keyedRemovalList) {\n        keyedRemovalList.push(key);\n      } else {\n        keyedRemovalList = [key];\n      }\n    }\n\n    function walkDiscardedChildNodes(node, skipKeyedNodes) {\n      if (node.nodeType === ELEMENT_NODE) {\n        var curChild = node.firstChild;\n\n        while (curChild) {\n          var key = undefined;\n\n          if (skipKeyedNodes && (key = getNodeKey(curChild))) {\n            // If we are skipping keyed nodes then we add the key\n            // to a list so that it can be handled at the very end.\n            addKeyedRemoval(key);\n          } else {\n            // Only report the node as discarded if it is not keyed. We do this because\n            // at the end we loop through all keyed elements that were unmatched\n            // and then discard them in one final pass.\n            onNodeDiscarded(curChild);\n\n            if (curChild.firstChild) {\n              walkDiscardedChildNodes(curChild, skipKeyedNodes);\n            }\n          }\n\n          curChild = curChild.nextSibling;\n        }\n      }\n    }\n    /**\n     * Removes a DOM node out of the original DOM\n     *\n     * @param  {Node} node The node to remove\n     * @param  {Node} parentNode The nodes parent\n     * @param  {Boolean} skipKeyedNodes If true then elements with keys will be skipped and not discarded.\n     * @return {undefined}\n     */\n\n\n    function removeNode(node, parentNode, skipKeyedNodes) {\n      if (onBeforeNodeDiscarded(node) === false) {\n        return;\n      }\n\n      if (parentNode) {\n        parentNode.removeChild(node);\n      }\n\n      onNodeDiscarded(node);\n      walkDiscardedChildNodes(node, skipKeyedNodes);\n    } // // TreeWalker implementation is no faster, but keeping this around in case this changes in the future\n    // function indexTree(root) {\n    //     var treeWalker = document.createTreeWalker(\n    //         root,\n    //         NodeFilter.SHOW_ELEMENT);\n    //\n    //     var el;\n    //     while((el = treeWalker.nextNode())) {\n    //         var key = getNodeKey(el);\n    //         if (key) {\n    //             fromNodesLookup[key] = el;\n    //         }\n    //     }\n    // }\n    // // NodeIterator implementation is no faster, but keeping this around in case this changes in the future\n    //\n    // function indexTree(node) {\n    //     var nodeIterator = document.createNodeIterator(node, NodeFilter.SHOW_ELEMENT);\n    //     var el;\n    //     while((el = nodeIterator.nextNode())) {\n    //         var key = getNodeKey(el);\n    //         if (key) {\n    //             fromNodesLookup[key] = el;\n    //         }\n    //     }\n    // }\n\n\n    function indexTree(node) {\n      if (node.nodeType === ELEMENT_NODE) {\n        var curChild = node.firstChild;\n\n        while (curChild) {\n          var key = getNodeKey(curChild);\n\n          if (key) {\n            fromNodesLookup[key] = curChild;\n          } // Walk recursively\n\n\n          indexTree(curChild);\n          curChild = curChild.nextSibling;\n        }\n      }\n    }\n\n    indexTree(fromNode);\n\n    function handleNodeAdded(el) {\n      onNodeAdded(el);\n      var curChild = el.firstChild;\n\n      while (curChild) {\n        var nextSibling = curChild.nextSibling;\n        var key = getNodeKey(curChild);\n\n        if (key) {\n          var unmatchedFromEl = fromNodesLookup[key];\n\n          if (unmatchedFromEl && Object(_util__WEBPACK_IMPORTED_MODULE_0__[\"compareNodeNames\"])(curChild, unmatchedFromEl)) {\n            curChild.parentNode.replaceChild(unmatchedFromEl, curChild);\n            morphEl(unmatchedFromEl, curChild);\n          }\n        }\n\n        handleNodeAdded(curChild);\n        curChild = nextSibling;\n      }\n    }\n\n    function morphEl(fromEl, toEl, childrenOnly) {\n      var toElKey = getNodeKey(toEl);\n      var curFromNodeKey;\n\n      if (toElKey) {\n        // If an element with an ID is being morphed then it is will be in the final\n        // DOM so clear it out of the saved elements collection\n        delete fromNodesLookup[toElKey];\n      }\n\n      if (toNode.isSameNode && toNode.isSameNode(fromNode)) {\n        return;\n      }\n\n      if (!childrenOnly) {\n        if (onBeforeElUpdated(fromEl, toEl) === false) {\n          return;\n        }\n\n        morphAttrs(fromEl, toEl);\n        onElUpdated(fromEl);\n\n        if (onBeforeElChildrenUpdated(fromEl, toEl) === false) {\n          return;\n        }\n      }\n\n      if (fromEl.nodeName !== 'TEXTAREA') {\n        var curToNodeChild = toEl.firstChild;\n        var curFromNodeChild = fromEl.firstChild;\n        var curToNodeKey;\n        var fromNextSibling;\n        var toNextSibling;\n        var matchingFromEl;\n\n        outer: while (curToNodeChild) {\n          toNextSibling = curToNodeChild.nextSibling;\n          curToNodeKey = getNodeKey(curToNodeChild);\n\n          while (curFromNodeChild) {\n            fromNextSibling = curFromNodeChild.nextSibling;\n\n            if (curToNodeChild.isSameNode && curToNodeChild.isSameNode(curFromNodeChild)) {\n              curToNodeChild = toNextSibling;\n              curFromNodeChild = fromNextSibling;\n              continue outer;\n            }\n\n            curFromNodeKey = getNodeKey(curFromNodeChild);\n            var curFromNodeType = curFromNodeChild.nodeType;\n            var isCompatible = undefined;\n\n            if (curFromNodeType === curToNodeChild.nodeType) {\n              if (curFromNodeType === ELEMENT_NODE) {\n                // Both nodes being compared are Element nodes\n                if (curToNodeKey) {\n                  // The target node has a key so we want to match it up with the correct element\n                  // in the original DOM tree\n                  if (curToNodeKey !== curFromNodeKey) {\n                    // The current element in the original DOM tree does not have a matching key so\n                    // let's check our lookup to see if there is a matching element in the original\n                    // DOM tree\n                    if (matchingFromEl = fromNodesLookup[curToNodeKey]) {\n                      if (curFromNodeChild.nextSibling === matchingFromEl) {\n                        // Special case for single element removals. To avoid removing the original\n                        // DOM node out of the tree (since that can break CSS transitions, etc.),\n                        // we will instead discard the current node and wait until the next\n                        // iteration to properly match up the keyed target element with its matching\n                        // element in the original tree\n                        isCompatible = false;\n                      } else {\n                        // We found a matching keyed element somewhere in the original DOM tree.\n                        // Let's moving the original DOM node into the current position and morph\n                        // it.\n                        // NOTE: We use insertBefore instead of replaceChild because we want to go through\n                        // the `removeNode()` function for the node that is being discarded so that\n                        // all lifecycle hooks are correctly invoked\n                        fromEl.insertBefore(matchingFromEl, curFromNodeChild);\n                        fromNextSibling = curFromNodeChild.nextSibling;\n\n                        if (curFromNodeKey) {\n                          // Since the node is keyed it might be matched up later so we defer\n                          // the actual removal to later\n                          addKeyedRemoval(curFromNodeKey);\n                        } else {\n                          // NOTE: we skip nested keyed nodes from being removed since there is\n                          //       still a chance they will be matched up later\n                          removeNode(curFromNodeChild, fromEl, true\n                          /* skip keyed nodes */\n                          );\n                        }\n\n                        curFromNodeChild = matchingFromEl;\n                      }\n                    } else {\n                      // The nodes are not compatible since the \"to\" node has a key and there\n                      // is no matching keyed node in the source tree\n                      isCompatible = false;\n                    }\n                  }\n                } else if (curFromNodeKey) {\n                  // The original has a key\n                  isCompatible = false;\n                }\n\n                isCompatible = isCompatible !== false && Object(_util__WEBPACK_IMPORTED_MODULE_0__[\"compareNodeNames\"])(curFromNodeChild, curToNodeChild);\n\n                if (isCompatible) {\n                  // We found compatible DOM elements so transform\n                  // the current \"from\" node to match the current\n                  // target DOM node.\n                  morphEl(curFromNodeChild, curToNodeChild);\n                }\n              } else if (curFromNodeType === TEXT_NODE || curFromNodeType == COMMENT_NODE) {\n                // Both nodes being compared are Text or Comment nodes\n                isCompatible = true; // Simply update nodeValue on the original node to\n                // change the text value\n\n                if (curFromNodeChild.nodeValue !== curToNodeChild.nodeValue) {\n                  curFromNodeChild.nodeValue = curToNodeChild.nodeValue;\n                }\n              }\n            }\n\n            if (isCompatible) {\n              // Advance both the \"to\" child and the \"from\" child since we found a match\n              curToNodeChild = toNextSibling;\n              curFromNodeChild = fromNextSibling;\n              continue outer;\n            } // No compatible match so remove the old node from the DOM and continue trying to find a\n            // match in the original DOM. However, we only do this if the from node is not keyed\n            // since it is possible that a keyed node might match up with a node somewhere else in the\n            // target tree and we don't want to discard it just yet since it still might find a\n            // home in the final DOM tree. After everything is done we will remove any keyed nodes\n            // that didn't find a home\n\n\n            if (curFromNodeKey) {\n              // Since the node is keyed it might be matched up later so we defer\n              // the actual removal to later\n              addKeyedRemoval(curFromNodeKey);\n            } else {\n              // NOTE: we skip nested keyed nodes from being removed since there is\n              //       still a chance they will be matched up later\n              removeNode(curFromNodeChild, fromEl, true\n              /* skip keyed nodes */\n              );\n            }\n\n            curFromNodeChild = fromNextSibling;\n          } // If we got this far then we did not find a candidate match for\n          // our \"to node\" and we exhausted all of the children \"from\"\n          // nodes. Therefore, we will just append the current \"to\" node\n          // to the end\n\n\n          if (curToNodeKey && (matchingFromEl = fromNodesLookup[curToNodeKey]) && Object(_util__WEBPACK_IMPORTED_MODULE_0__[\"compareNodeNames\"])(matchingFromEl, curToNodeChild)) {\n            fromEl.appendChild(matchingFromEl);\n            morphEl(matchingFromEl, curToNodeChild);\n          } else {\n            var onBeforeNodeAddedResult = onBeforeNodeAdded(curToNodeChild);\n\n            if (onBeforeNodeAddedResult !== false) {\n              if (onBeforeNodeAddedResult) {\n                curToNodeChild = onBeforeNodeAddedResult;\n              }\n\n              if (curToNodeChild.actualize) {\n                curToNodeChild = curToNodeChild.actualize(fromEl.ownerDocument || _util__WEBPACK_IMPORTED_MODULE_0__[\"doc\"]);\n              }\n\n              fromEl.appendChild(curToNodeChild);\n              handleNodeAdded(curToNodeChild);\n            }\n          }\n\n          curToNodeChild = toNextSibling;\n          curFromNodeChild = fromNextSibling;\n        } // We have processed all of the \"to nodes\". If curFromNodeChild is\n        // non-null then we still have some from nodes left over that need\n        // to be removed\n\n\n        while (curFromNodeChild) {\n          fromNextSibling = curFromNodeChild.nextSibling;\n\n          if (curFromNodeKey = getNodeKey(curFromNodeChild)) {\n            // Since the node is keyed it might be matched up later so we defer\n            // the actual removal to later\n            addKeyedRemoval(curFromNodeKey);\n          } else {\n            // NOTE: we skip nested keyed nodes from being removed since there is\n            //       still a chance they will be matched up later\n            removeNode(curFromNodeChild, fromEl, true\n            /* skip keyed nodes */\n            );\n          }\n\n          curFromNodeChild = fromNextSibling;\n        }\n      }\n\n      var specialElHandler = _specialElHandlers__WEBPACK_IMPORTED_MODULE_1__[\"default\"][fromEl.nodeName];\n\n      if (specialElHandler) {\n        specialElHandler(fromEl, toEl);\n      }\n    } // END: morphEl(...)\n\n\n    var morphedNode = fromNode;\n    var morphedNodeType = morphedNode.nodeType;\n    var toNodeType = toNode.nodeType;\n\n    if (!childrenOnly) {\n      // Handle the case where we are given two DOM nodes that are not\n      // compatible (e.g. <div> --> <span> or <div> --> TEXT)\n      if (morphedNodeType === ELEMENT_NODE) {\n        if (toNodeType === ELEMENT_NODE) {\n          if (!Object(_util__WEBPACK_IMPORTED_MODULE_0__[\"compareNodeNames\"])(fromNode, toNode)) {\n            onNodeDiscarded(fromNode);\n            morphedNode = Object(_util__WEBPACK_IMPORTED_MODULE_0__[\"moveChildren\"])(fromNode, Object(_util__WEBPACK_IMPORTED_MODULE_0__[\"createElementNS\"])(toNode.nodeName, toNode.namespaceURI));\n          }\n        } else {\n          // Going from an element node to a text node\n          morphedNode = toNode;\n        }\n      } else if (morphedNodeType === TEXT_NODE || morphedNodeType === COMMENT_NODE) {\n        // Text or comment node\n        if (toNodeType === morphedNodeType) {\n          if (morphedNode.nodeValue !== toNode.nodeValue) {\n            morphedNode.nodeValue = toNode.nodeValue;\n          }\n\n          return morphedNode;\n        } else {\n          // Text node to something else\n          morphedNode = toNode;\n        }\n      }\n    }\n\n    if (morphedNode === toNode) {\n      // The \"to node\" was not compatible with the \"from node\" so we had to\n      // toss out the \"from node\" and use the \"to node\"\n      onNodeDiscarded(fromNode);\n    } else {\n      morphEl(morphedNode, toNode, childrenOnly); // We now need to loop over any keyed nodes that might need to be\n      // removed. We only do the removal if we know that the keyed node\n      // never found a match. When a keyed node is matched up we remove\n      // it out of fromNodesLookup and we use fromNodesLookup to determine\n      // if a keyed node has been matched up or not\n\n      if (keyedRemovalList) {\n        for (var i = 0, len = keyedRemovalList.length; i < len; i++) {\n          var elToRemove = fromNodesLookup[keyedRemovalList[i]];\n\n          if (elToRemove) {\n            removeNode(elToRemove, elToRemove.parentNode, false);\n          }\n        }\n      }\n    }\n\n    if (!childrenOnly && morphedNode !== fromNode && fromNode.parentNode) {\n      if (morphedNode.actualize) {\n        morphedNode = morphedNode.actualize(fromNode.ownerDocument || _util__WEBPACK_IMPORTED_MODULE_0__[\"doc\"]);\n      } // If we had to swap out the from node with a new node because the old\n      // node was not compatible with the target node then we need to\n      // replace the old DOM node in the original DOM tree. This is only\n      // possible if the original DOM node was part of a DOM tree which\n      // we know is the case if it has a parent node.\n\n\n      fromNode.parentNode.replaceChild(morphedNode, fromNode);\n    }\n\n    return morphedNode;\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/morphdom/morphdom.js\n");

/***/ }),

/***/ "./src/js/morphdom/specialElHandlers.js":
/*!**********************************************!*\
  !*** ./src/js/morphdom/specialElHandlers.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util */ \"./src/js/morphdom/util.js\");\n\n\nfunction syncBooleanAttrProp(fromEl, toEl, name) {\n  if (fromEl[name] !== toEl[name]) {\n    fromEl[name] = toEl[name];\n\n    if (fromEl[name]) {\n      fromEl.setAttribute(name, '');\n    } else {\n      fromEl.removeAttribute(name);\n    }\n  }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  /**\n   * Needed for IE. Apparently IE doesn't think that \"selected\" is an\n   * attribute when reading over the attributes using selectEl.attributes\n   */\n  OPTION: function OPTION(fromEl, toEl) {\n    syncBooleanAttrProp(fromEl, toEl, 'selected');\n  },\n\n  /**\n   * The \"value\" attribute is special for the <input> element since it sets\n   * the initial value. Changing the \"value\" attribute without changing the\n   * \"value\" property will have no effect since it is only used to the set the\n   * initial value.  Similar for the \"checked\" attribute, and \"disabled\".\n   */\n  INPUT: function INPUT(fromEl, toEl) {\n    syncBooleanAttrProp(fromEl, toEl, 'checked');\n    syncBooleanAttrProp(fromEl, toEl, 'disabled');\n\n    if (fromEl.value !== toEl.value) {\n      fromEl.value = toEl.value;\n    }\n\n    if (!Object(_util__WEBPACK_IMPORTED_MODULE_0__[\"hasAttributeNS\"])(toEl, null, 'value')) {\n      fromEl.removeAttribute('value');\n    }\n  },\n  TEXTAREA: function TEXTAREA(fromEl, toEl) {\n    var newValue = toEl.value;\n\n    if (fromEl.value !== newValue) {\n      fromEl.value = newValue;\n    }\n\n    var firstChild = fromEl.firstChild;\n\n    if (firstChild) {\n      // Needed for IE. Apparently IE sets the placeholder as the\n      // node value and vise versa. This ignores an empty update.\n      var oldValue = firstChild.nodeValue;\n\n      if (oldValue == newValue || !newValue && oldValue == fromEl.placeholder) {\n        return;\n      }\n\n      firstChild.nodeValue = newValue;\n    }\n  },\n  SELECT: function SELECT(fromEl, toEl) {\n    if (!Object(_util__WEBPACK_IMPORTED_MODULE_0__[\"hasAttributeNS\"])(toEl, null, 'multiple')) {\n      var selectedIndex = -1;\n      var i = 0;\n      var curChild = toEl.firstChild;\n\n      while (curChild) {\n        var nodeName = curChild.nodeName;\n\n        if (nodeName && nodeName.toUpperCase() === 'OPTION') {\n          if (Object(_util__WEBPACK_IMPORTED_MODULE_0__[\"hasAttributeNS\"])(curChild, null, 'selected')) {\n            selectedIndex = i;\n            break;\n          }\n\n          i++;\n        }\n\n        curChild = curChild.nextSibling;\n      }\n\n      fromEl.selectedIndex = i;\n    }\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvbW9ycGhkb20vc3BlY2lhbEVsSGFuZGxlcnMuanM/YWYxNSJdLCJuYW1lcyI6WyJzeW5jQm9vbGVhbkF0dHJQcm9wIiwiZnJvbUVsIiwidG9FbCIsIm5hbWUiLCJzZXRBdHRyaWJ1dGUiLCJyZW1vdmVBdHRyaWJ1dGUiLCJPUFRJT04iLCJJTlBVVCIsInZhbHVlIiwiaGFzQXR0cmlidXRlTlMiLCJURVhUQVJFQSIsIm5ld1ZhbHVlIiwiZmlyc3RDaGlsZCIsIm9sZFZhbHVlIiwibm9kZVZhbHVlIiwicGxhY2Vob2xkZXIiLCJTRUxFQ1QiLCJzZWxlY3RlZEluZGV4IiwiaSIsImN1ckNoaWxkIiwibm9kZU5hbWUiLCJ0b1VwcGVyQ2FzZSIsIm5leHRTaWJsaW5nIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7O0FBRUEsU0FBU0EsbUJBQVQsQ0FBNkJDLE1BQTdCLEVBQXFDQyxJQUFyQyxFQUEyQ0MsSUFBM0MsRUFBaUQ7QUFDN0MsTUFBSUYsTUFBTSxDQUFDRSxJQUFELENBQU4sS0FBaUJELElBQUksQ0FBQ0MsSUFBRCxDQUF6QixFQUFpQztBQUM3QkYsVUFBTSxDQUFDRSxJQUFELENBQU4sR0FBZUQsSUFBSSxDQUFDQyxJQUFELENBQW5COztBQUNBLFFBQUlGLE1BQU0sQ0FBQ0UsSUFBRCxDQUFWLEVBQWtCO0FBQ2RGLFlBQU0sQ0FBQ0csWUFBUCxDQUFvQkQsSUFBcEIsRUFBMEIsRUFBMUI7QUFDSCxLQUZELE1BRU87QUFDSEYsWUFBTSxDQUFDSSxlQUFQLENBQXVCRixJQUF2QjtBQUNIO0FBQ0o7QUFDSjs7QUFFYztBQUNYOzs7O0FBSUFHLFFBQU0sRUFBRSxnQkFBU0wsTUFBVCxFQUFpQkMsSUFBakIsRUFBdUI7QUFDM0JGLHVCQUFtQixDQUFDQyxNQUFELEVBQVNDLElBQVQsRUFBZSxVQUFmLENBQW5CO0FBQ0gsR0FQVTs7QUFRWDs7Ozs7O0FBTUFLLE9BQUssRUFBRSxlQUFTTixNQUFULEVBQWlCQyxJQUFqQixFQUF1QjtBQUMxQkYsdUJBQW1CLENBQUNDLE1BQUQsRUFBU0MsSUFBVCxFQUFlLFNBQWYsQ0FBbkI7QUFDQUYsdUJBQW1CLENBQUNDLE1BQUQsRUFBU0MsSUFBVCxFQUFlLFVBQWYsQ0FBbkI7O0FBRUEsUUFBSUQsTUFBTSxDQUFDTyxLQUFQLEtBQWlCTixJQUFJLENBQUNNLEtBQTFCLEVBQWlDO0FBQzdCUCxZQUFNLENBQUNPLEtBQVAsR0FBZU4sSUFBSSxDQUFDTSxLQUFwQjtBQUNIOztBQUVELFFBQUksQ0FBQ0MsNERBQWMsQ0FBQ1AsSUFBRCxFQUFPLElBQVAsRUFBYSxPQUFiLENBQW5CLEVBQTBDO0FBQ3RDRCxZQUFNLENBQUNJLGVBQVAsQ0FBdUIsT0FBdkI7QUFDSDtBQUNKLEdBekJVO0FBMkJYSyxVQUFRLEVBQUUsa0JBQVNULE1BQVQsRUFBaUJDLElBQWpCLEVBQXVCO0FBQzdCLFFBQUlTLFFBQVEsR0FBR1QsSUFBSSxDQUFDTSxLQUFwQjs7QUFDQSxRQUFJUCxNQUFNLENBQUNPLEtBQVAsS0FBaUJHLFFBQXJCLEVBQStCO0FBQzNCVixZQUFNLENBQUNPLEtBQVAsR0FBZUcsUUFBZjtBQUNIOztBQUVELFFBQUlDLFVBQVUsR0FBR1gsTUFBTSxDQUFDVyxVQUF4Qjs7QUFDQSxRQUFJQSxVQUFKLEVBQWdCO0FBQ1o7QUFDQTtBQUNBLFVBQUlDLFFBQVEsR0FBR0QsVUFBVSxDQUFDRSxTQUExQjs7QUFFQSxVQUFJRCxRQUFRLElBQUlGLFFBQVosSUFBeUIsQ0FBQ0EsUUFBRCxJQUFhRSxRQUFRLElBQUlaLE1BQU0sQ0FBQ2MsV0FBN0QsRUFBMkU7QUFDdkU7QUFDSDs7QUFFREgsZ0JBQVUsQ0FBQ0UsU0FBWCxHQUF1QkgsUUFBdkI7QUFDSDtBQUNKLEdBN0NVO0FBOENYSyxRQUFNLEVBQUUsZ0JBQVNmLE1BQVQsRUFBaUJDLElBQWpCLEVBQXVCO0FBQzNCLFFBQUksQ0FBQ08sNERBQWMsQ0FBQ1AsSUFBRCxFQUFPLElBQVAsRUFBYSxVQUFiLENBQW5CLEVBQTZDO0FBQ3pDLFVBQUllLGFBQWEsR0FBRyxDQUFDLENBQXJCO0FBQ0EsVUFBSUMsQ0FBQyxHQUFHLENBQVI7QUFDQSxVQUFJQyxRQUFRLEdBQUdqQixJQUFJLENBQUNVLFVBQXBCOztBQUNBLGFBQU1PLFFBQU4sRUFBZ0I7QUFDWixZQUFJQyxRQUFRLEdBQUdELFFBQVEsQ0FBQ0MsUUFBeEI7O0FBQ0EsWUFBSUEsUUFBUSxJQUFJQSxRQUFRLENBQUNDLFdBQVQsT0FBMkIsUUFBM0MsRUFBcUQ7QUFDakQsY0FBSVosNERBQWMsQ0FBQ1UsUUFBRCxFQUFXLElBQVgsRUFBaUIsVUFBakIsQ0FBbEIsRUFBZ0Q7QUFDNUNGLHlCQUFhLEdBQUdDLENBQWhCO0FBQ0E7QUFDSDs7QUFDREEsV0FBQztBQUNKOztBQUNEQyxnQkFBUSxHQUFHQSxRQUFRLENBQUNHLFdBQXBCO0FBQ0g7O0FBRURyQixZQUFNLENBQUNnQixhQUFQLEdBQXVCQyxDQUF2QjtBQUNIO0FBQ0o7QUFqRVUsQ0FBZiIsImZpbGUiOiIuL3NyYy9qcy9tb3JwaGRvbS9zcGVjaWFsRWxIYW5kbGVycy5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGhhc0F0dHJpYnV0ZU5TIH0gZnJvbSAnLi91dGlsJztcblxuZnVuY3Rpb24gc3luY0Jvb2xlYW5BdHRyUHJvcChmcm9tRWwsIHRvRWwsIG5hbWUpIHtcbiAgICBpZiAoZnJvbUVsW25hbWVdICE9PSB0b0VsW25hbWVdKSB7XG4gICAgICAgIGZyb21FbFtuYW1lXSA9IHRvRWxbbmFtZV07XG4gICAgICAgIGlmIChmcm9tRWxbbmFtZV0pIHtcbiAgICAgICAgICAgIGZyb21FbC5zZXRBdHRyaWJ1dGUobmFtZSwgJycpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgZnJvbUVsLnJlbW92ZUF0dHJpYnV0ZShuYW1lKTtcbiAgICAgICAgfVxuICAgIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQge1xuICAgIC8qKlxuICAgICAqIE5lZWRlZCBmb3IgSUUuIEFwcGFyZW50bHkgSUUgZG9lc24ndCB0aGluayB0aGF0IFwic2VsZWN0ZWRcIiBpcyBhblxuICAgICAqIGF0dHJpYnV0ZSB3aGVuIHJlYWRpbmcgb3ZlciB0aGUgYXR0cmlidXRlcyB1c2luZyBzZWxlY3RFbC5hdHRyaWJ1dGVzXG4gICAgICovXG4gICAgT1BUSU9OOiBmdW5jdGlvbihmcm9tRWwsIHRvRWwpIHtcbiAgICAgICAgc3luY0Jvb2xlYW5BdHRyUHJvcChmcm9tRWwsIHRvRWwsICdzZWxlY3RlZCcpO1xuICAgIH0sXG4gICAgLyoqXG4gICAgICogVGhlIFwidmFsdWVcIiBhdHRyaWJ1dGUgaXMgc3BlY2lhbCBmb3IgdGhlIDxpbnB1dD4gZWxlbWVudCBzaW5jZSBpdCBzZXRzXG4gICAgICogdGhlIGluaXRpYWwgdmFsdWUuIENoYW5naW5nIHRoZSBcInZhbHVlXCIgYXR0cmlidXRlIHdpdGhvdXQgY2hhbmdpbmcgdGhlXG4gICAgICogXCJ2YWx1ZVwiIHByb3BlcnR5IHdpbGwgaGF2ZSBubyBlZmZlY3Qgc2luY2UgaXQgaXMgb25seSB1c2VkIHRvIHRoZSBzZXQgdGhlXG4gICAgICogaW5pdGlhbCB2YWx1ZS4gIFNpbWlsYXIgZm9yIHRoZSBcImNoZWNrZWRcIiBhdHRyaWJ1dGUsIGFuZCBcImRpc2FibGVkXCIuXG4gICAgICovXG4gICAgSU5QVVQ6IGZ1bmN0aW9uKGZyb21FbCwgdG9FbCkge1xuICAgICAgICBzeW5jQm9vbGVhbkF0dHJQcm9wKGZyb21FbCwgdG9FbCwgJ2NoZWNrZWQnKTtcbiAgICAgICAgc3luY0Jvb2xlYW5BdHRyUHJvcChmcm9tRWwsIHRvRWwsICdkaXNhYmxlZCcpO1xuXG4gICAgICAgIGlmIChmcm9tRWwudmFsdWUgIT09IHRvRWwudmFsdWUpIHtcbiAgICAgICAgICAgIGZyb21FbC52YWx1ZSA9IHRvRWwudmFsdWU7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoIWhhc0F0dHJpYnV0ZU5TKHRvRWwsIG51bGwsICd2YWx1ZScpKSB7XG4gICAgICAgICAgICBmcm9tRWwucmVtb3ZlQXR0cmlidXRlKCd2YWx1ZScpO1xuICAgICAgICB9XG4gICAgfSxcblxuICAgIFRFWFRBUkVBOiBmdW5jdGlvbihmcm9tRWwsIHRvRWwpIHtcbiAgICAgICAgdmFyIG5ld1ZhbHVlID0gdG9FbC52YWx1ZTtcbiAgICAgICAgaWYgKGZyb21FbC52YWx1ZSAhPT0gbmV3VmFsdWUpIHtcbiAgICAgICAgICAgIGZyb21FbC52YWx1ZSA9IG5ld1ZhbHVlO1xuICAgICAgICB9XG5cbiAgICAgICAgdmFyIGZpcnN0Q2hpbGQgPSBmcm9tRWwuZmlyc3RDaGlsZDtcbiAgICAgICAgaWYgKGZpcnN0Q2hpbGQpIHtcbiAgICAgICAgICAgIC8vIE5lZWRlZCBmb3IgSUUuIEFwcGFyZW50bHkgSUUgc2V0cyB0aGUgcGxhY2Vob2xkZXIgYXMgdGhlXG4gICAgICAgICAgICAvLyBub2RlIHZhbHVlIGFuZCB2aXNlIHZlcnNhLiBUaGlzIGlnbm9yZXMgYW4gZW1wdHkgdXBkYXRlLlxuICAgICAgICAgICAgdmFyIG9sZFZhbHVlID0gZmlyc3RDaGlsZC5ub2RlVmFsdWU7XG5cbiAgICAgICAgICAgIGlmIChvbGRWYWx1ZSA9PSBuZXdWYWx1ZSB8fCAoIW5ld1ZhbHVlICYmIG9sZFZhbHVlID09IGZyb21FbC5wbGFjZWhvbGRlcikpIHtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGZpcnN0Q2hpbGQubm9kZVZhbHVlID0gbmV3VmFsdWU7XG4gICAgICAgIH1cbiAgICB9LFxuICAgIFNFTEVDVDogZnVuY3Rpb24oZnJvbUVsLCB0b0VsKSB7XG4gICAgICAgIGlmICghaGFzQXR0cmlidXRlTlModG9FbCwgbnVsbCwgJ211bHRpcGxlJykpIHtcbiAgICAgICAgICAgIHZhciBzZWxlY3RlZEluZGV4ID0gLTE7XG4gICAgICAgICAgICB2YXIgaSA9IDA7XG4gICAgICAgICAgICB2YXIgY3VyQ2hpbGQgPSB0b0VsLmZpcnN0Q2hpbGQ7XG4gICAgICAgICAgICB3aGlsZShjdXJDaGlsZCkge1xuICAgICAgICAgICAgICAgIHZhciBub2RlTmFtZSA9IGN1ckNoaWxkLm5vZGVOYW1lO1xuICAgICAgICAgICAgICAgIGlmIChub2RlTmFtZSAmJiBub2RlTmFtZS50b1VwcGVyQ2FzZSgpID09PSAnT1BUSU9OJykge1xuICAgICAgICAgICAgICAgICAgICBpZiAoaGFzQXR0cmlidXRlTlMoY3VyQ2hpbGQsIG51bGwsICdzZWxlY3RlZCcpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZEluZGV4ID0gaTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGkrKztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY3VyQ2hpbGQgPSBjdXJDaGlsZC5uZXh0U2libGluZztcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgZnJvbUVsLnNlbGVjdGVkSW5kZXggPSBpO1xuICAgICAgICB9XG4gICAgfVxufTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/js/morphdom/specialElHandlers.js\n");

/***/ }),

/***/ "./src/js/morphdom/util.js":
/*!*********************************!*\
  !*** ./src/js/morphdom/util.js ***!
  \*********************************/
/*! exports provided: doc, hasAttributeNS, toElement, compareNodeNames, createElementNS, moveChildren */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"doc\", function() { return doc; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"hasAttributeNS\", function() { return hasAttributeNS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"toElement\", function() { return toElement; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"compareNodeNames\", function() { return compareNodeNames; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createElementNS\", function() { return createElementNS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"moveChildren\", function() { return moveChildren; });\nvar range; // Create a range object for efficently rendering strings to elements.\n\nvar NS_XHTML = 'http://www.w3.org/1999/xhtml';\nvar doc = typeof document === 'undefined' ? undefined : document;\nvar testEl = doc ? doc.body || doc.createElement('div') : {}; // Fixes <https://github.com/patrick-steele-idem/morphdom/issues/32>\n// (IE7+ support) <=IE7 does not support el.hasAttribute(name)\n\nvar actualHasAttributeNS;\n\nif (testEl.hasAttributeNS) {\n  actualHasAttributeNS = function actualHasAttributeNS(el, namespaceURI, name) {\n    return el.hasAttributeNS(namespaceURI, name);\n  };\n} else if (testEl.hasAttribute) {\n  actualHasAttributeNS = function actualHasAttributeNS(el, namespaceURI, name) {\n    return el.hasAttribute(name);\n  };\n} else {\n  actualHasAttributeNS = function actualHasAttributeNS(el, namespaceURI, name) {\n    return el.getAttributeNode(namespaceURI, name) != null;\n  };\n}\n\nvar hasAttributeNS = actualHasAttributeNS;\nfunction toElement(str) {\n  if (!range && doc.createRange) {\n    range = doc.createRange();\n    range.selectNode(doc.body);\n  }\n\n  var fragment;\n\n  if (range && range.createContextualFragment) {\n    fragment = range.createContextualFragment(str);\n  } else {\n    fragment = doc.createElement('body');\n    fragment.innerHTML = str;\n  }\n\n  return fragment.childNodes[0];\n}\n/**\n * Returns true if two node's names are the same.\n *\n * NOTE: We don't bother checking `namespaceURI` because you will never find two HTML elements with the same\n *       nodeName and different namespace URIs.\n *\n * @param {Element} a\n * @param {Element} b The target element\n * @return {boolean}\n */\n\nfunction compareNodeNames(fromEl, toEl) {\n  var fromNodeName = fromEl.nodeName;\n  var toNodeName = toEl.nodeName;\n\n  if (fromNodeName === toNodeName) {\n    return true;\n  }\n\n  if (toEl.actualize && fromNodeName.charCodeAt(0) < 91 &&\n  /* from tag name is upper case */\n  toNodeName.charCodeAt(0) > 90\n  /* target tag name is lower case */\n  ) {\n      // If the target element is a virtual DOM node then we may need to normalize the tag name\n      // before comparing. Normal HTML elements that are in the \"http://www.w3.org/1999/xhtml\"\n      // are converted to upper case\n      return fromNodeName === toNodeName.toUpperCase();\n    } else {\n    return false;\n  }\n}\n/**\n * Create an element, optionally with a known namespace URI.\n *\n * @param {string} name the element name, e.g. 'div' or 'svg'\n * @param {string} [namespaceURI] the element's namespace URI, i.e. the value of\n * its `xmlns` attribute or its inferred namespace.\n *\n * @return {Element}\n */\n\nfunction createElementNS(name, namespaceURI) {\n  return !namespaceURI || namespaceURI === NS_XHTML ? doc.createElement(name) : doc.createElementNS(namespaceURI, name);\n}\n/**\n * Copies the children of one DOM element to another DOM element\n */\n\nfunction moveChildren(fromEl, toEl) {\n  var curChild = fromEl.firstChild;\n\n  while (curChild) {\n    var nextChild = curChild.nextSibling;\n    toEl.appendChild(curChild);\n    curChild = nextChild;\n  }\n\n  return toEl;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/morphdom/util.js\n");

/***/ }),

/***/ "./src/js/prefix.js":
/*!**************************!*\
  !*** ./src/js/prefix.js ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var prefix = null;\n\nmodule.exports = function () {\n  if (prefix === null) {\n    prefix = (document.querySelector('meta[name=\"livewire-prefix\"]') || {\n      content: 'wire'\n    }).content;\n  }\n\n  return prefix;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvcHJlZml4LmpzP2JmNjkiXSwibmFtZXMiOlsicHJlZml4IiwibW9kdWxlIiwiZXhwb3J0cyIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsImNvbnRlbnQiXSwibWFwcGluZ3MiOiJBQUFBLElBQUlBLE1BQU0sR0FBRyxJQUFiOztBQUVBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUIsWUFBWTtBQUN6QixNQUFJRixNQUFNLEtBQUssSUFBZixFQUFxQjtBQUNqQkEsVUFBTSxHQUFHLENBQ0xHLFFBQVEsQ0FBQ0MsYUFBVCxDQUF1Qiw4QkFBdkIsS0FDRztBQUFFQyxhQUFPLEVBQUU7QUFBWCxLQUZFLEVBR1BBLE9BSEY7QUFJSDs7QUFFRCxTQUFPTCxNQUFQO0FBQ0gsQ0FURCIsImZpbGUiOiIuL3NyYy9qcy9wcmVmaXguanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgcHJlZml4ID0gbnVsbDtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoKSB7XG4gICAgaWYgKHByZWZpeCA9PT0gbnVsbCkge1xuICAgICAgICBwcmVmaXggPSAoXG4gICAgICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdtZXRhW25hbWU9XCJsaXZld2lyZS1wcmVmaXhcIl0nKVxuICAgICAgICAgICAgfHwgeyBjb250ZW50OiAnd2lyZScgfVxuICAgICAgICApLmNvbnRlbnRcbiAgICB9XG5cbiAgICByZXR1cm4gcHJlZml4XG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/js/prefix.js\n");

/***/ }),

/***/ "./src/js/renameme.js":
/*!****************************!*\
  !*** ./src/js/renameme.js ***!
  \****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _debounce_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./debounce.js */ \"./src/js/debounce.js\");\n\n\nvar prefix = __webpack_require__(/*! ./prefix.js */ \"./src/js/prefix.js\")();\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  // This is soooo bad, but it currently get's set inside \"debounce\"\n  timeout: 0,\n  // Eff me, this function prevents some weird front-end behavior.\n  // It's too complicated for me to go into detail right now.\n  debounceOnTimeout: function debounceOnTimeout(callback) {\n    var outerContext = this;\n    return function () {\n      var context = this,\n          args = arguments;\n\n      if (outerContext.timeout > 0) {\n        setTimeout(function () {\n          callback.apply(context, args);\n        }, outerContext.timeout);\n      } else {\n        callback.apply(context, args);\n      }\n    };\n  },\n  getRoot: function getRoot(component) {\n    return document.querySelector(\"[\".concat(prefix, \"\\\\:root=\\\"\").concat(component, \"\\\"]\"));\n  },\n\n  get livewireElements() {\n    var hold = [];\n    var tags = document.evaluate(\"//*[@*[starts-with(name(), \\\"\".concat(prefix, \"\\\")]]\"), document, null, XPathResult.UNORDERED_NODE_ITERATOR_TYPE, null);\n    var node = tags.iterateNext();\n\n    while (node) {\n      hold.push(node);\n      node = tags.iterateNext();\n    }\n\n    return hold;\n  },\n\n  attachClick: function attachClick(el, callback, modifiers, value) {\n    var _this = this;\n\n    el.addEventListener('click', function (e) {\n      if (modifiers.includes('prevent')) {\n        e.preventDefault();\n      }\n\n      if (modifiers.includes('stop')) {\n        e.stopPropagation();\n      }\n\n      if (value) {\n        var _this$parseOutMethodA = _this.parseOutMethodAndParams(value),\n            method = _this$parseOutMethodA.method,\n            params = _this$parseOutMethodA.params;\n\n        _this.debounceOnTimeout(callback)(method, params, e.target);\n      }\n    });\n  },\n  attachSubmit: function attachSubmit(el, callback) {\n    var _this2 = this;\n\n    el.addEventListener('submit', function (e) {\n      e.preventDefault();\n\n      var _this2$parseOutMethod = _this2.parseOutMethodAndParams(el.getAttribute(\"\".concat(prefix, \":submit\"))),\n          method = _this2$parseOutMethod.method,\n          params = _this2$parseOutMethod.params;\n\n      _this2.debounceOnTimeout(callback)(method, params, e.target);\n    });\n  },\n  attachEnter: function attachEnter(el, callback, modifiers, value) {\n    var _this3 = this;\n\n    el.addEventListener('keydown', function (e) {\n      if (modifiers.length === 0) {\n        var _this3$parseOutMethod = _this3.parseOutMethodAndParams(value),\n            method = _this3$parseOutMethod.method,\n            params = _this3$parseOutMethod.params;\n\n        _this3.debounceOnTimeout(callback)(method, params, e.target);\n      }\n\n      if (modifiers.includes('enter') && e.keyCode == '13') {\n        var _this3$parseOutMethod2 = _this3.parseOutMethodAndParams(value),\n            _method = _this3$parseOutMethod2.method,\n            _params = _this3$parseOutMethod2.params;\n\n        _this3.debounceOnTimeout(callback)(_method, _params, e.target);\n      }\n    });\n  },\n  attachSync: function attachSync(el, callback) {\n    el.addEventListener('input', Object(_debounce_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(function (e) {\n      var model = e.target.getAttribute(\"\".concat(prefix, \":sync\"));\n      callback(model, e.target);\n    }, 150));\n  },\n  parseOutMethodAndParams: function parseOutMethodAndParams(rawMethod) {\n    var params = [];\n    var method = rawMethod;\n\n    if (method.match(/(.*)\\((.*)\\)/)) {\n      var matches = method.match(/(.*)\\((.*)\\)/);\n      method = matches[1];\n      params = matches[2].split(', ').map(function (param) {\n        if (eval('typeof ' + param) === 'undefined') {\n          return document.querySelector(\"[\".concat(prefix, \"\\\\:model=\\\"\") + param + '\"]').value;\n        }\n\n        return eval(param);\n      });\n    }\n\n    return {\n      method: method,\n      params: params\n    };\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/renameme.js\n");

/***/ }),

/***/ "./src/js/store.js":
/*!*************************!*\
  !*** ./src/js/store.js ***!
  \*************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nvar store = {\n  componentsById: {}\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (store);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvc3RvcmUuanM/NmFiMSJdLCJuYW1lcyI6WyJzdG9yZSIsImNvbXBvbmVudHNCeUlkIl0sIm1hcHBpbmdzIjoiQUFDQTtBQUFBLElBQUlBLEtBQUssR0FBRztBQUNSQyxnQkFBYyxFQUFFO0FBRFIsQ0FBWjtBQUllRCxvRUFBZiIsImZpbGUiOiIuL3NyYy9qcy9zdG9yZS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxudmFyIHN0b3JlID0ge1xuICAgIGNvbXBvbmVudHNCeUlkOiB7fSxcbn1cblxuZXhwb3J0IGRlZmF1bHQgc3RvcmVcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/js/store.js\n");

/***/ }),

/***/ "./src/js/webSocket.js":
/*!*****************************!*\
  !*** ./src/js/webSocket.js ***!
  \*****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  onMessage: null,\n  fallback: null,\n  refreshDom: null,\n  init: function init() {\n    var _this = this;\n\n    this.wsConnection = new WebSocket(\"ws://\".concat(window.location.hostname, \":6001\"));\n\n    this.wsConnection.onopen = function () {\n      console.log('Successfully connected to websocket server');\n    };\n\n    this.wsConnection.onerror = function (e) {\n      throw new Error('Can\\'t connect to websocket server');\n    };\n\n    this.wsConnection.onclose = function () {\n      throw new Error('Lost websocket connection');\n    };\n\n    this.wsConnection.onmessage = function (e) {\n      _this.onMessage.call(_this, JSON.parse(e.data));\n    };\n  },\n  wireUp: function wireUp() {},\n  sendMessage: function sendMessage(payload) {\n    this.wsConnection.send(JSON.stringify(payload));\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvd2ViU29ja2V0LmpzP2ZkYTIiXSwibmFtZXMiOlsib25NZXNzYWdlIiwiZmFsbGJhY2siLCJyZWZyZXNoRG9tIiwiaW5pdCIsIndzQ29ubmVjdGlvbiIsIldlYlNvY2tldCIsIndpbmRvdyIsImxvY2F0aW9uIiwiaG9zdG5hbWUiLCJvbm9wZW4iLCJjb25zb2xlIiwibG9nIiwib25lcnJvciIsImUiLCJFcnJvciIsIm9uY2xvc2UiLCJvbm1lc3NhZ2UiLCJjYWxsIiwiSlNPTiIsInBhcnNlIiwiZGF0YSIsIndpcmVVcCIsInNlbmRNZXNzYWdlIiwicGF5bG9hZCIsInNlbmQiLCJzdHJpbmdpZnkiXSwibWFwcGluZ3MiOiJBQUFBO0FBQWU7QUFDWEEsV0FBUyxFQUFFLElBREE7QUFFWEMsVUFBUSxFQUFFLElBRkM7QUFHWEMsWUFBVSxFQUFFLElBSEQ7QUFLWEMsTUFMVyxrQkFLSjtBQUFBOztBQUNILFNBQUtDLFlBQUwsR0FBb0IsSUFBSUMsU0FBSixnQkFBc0JDLE1BQU0sQ0FBQ0MsUUFBUCxDQUFnQkMsUUFBdEMsV0FBcEI7O0FBRUEsU0FBS0osWUFBTCxDQUFrQkssTUFBbEIsR0FBMkIsWUFBTTtBQUM3QkMsYUFBTyxDQUFDQyxHQUFSLENBQVksNENBQVo7QUFDSCxLQUZEOztBQUlBLFNBQUtQLFlBQUwsQ0FBa0JRLE9BQWxCLEdBQTRCLFVBQUFDLENBQUMsRUFBSTtBQUM3QixZQUFNLElBQUlDLEtBQUosQ0FBVSxvQ0FBVixDQUFOO0FBQ0gsS0FGRDs7QUFJQSxTQUFLVixZQUFMLENBQWtCVyxPQUFsQixHQUE0QixZQUFNO0FBQzlCLFlBQU0sSUFBSUQsS0FBSixDQUFVLDJCQUFWLENBQU47QUFDSCxLQUZEOztBQUlBLFNBQUtWLFlBQUwsQ0FBa0JZLFNBQWxCLEdBQThCLFVBQUFILENBQUMsRUFBSTtBQUMvQixXQUFJLENBQUNiLFNBQUwsQ0FBZWlCLElBQWYsQ0FBb0IsS0FBcEIsRUFBMEJDLElBQUksQ0FBQ0MsS0FBTCxDQUFXTixDQUFDLENBQUNPLElBQWIsQ0FBMUI7QUFDSCxLQUZEO0FBR0gsR0F2QlU7QUF5QlhDLFFBekJXLG9CQXlCRixDQUNSLENBMUJVO0FBNEJYQyxhQTVCVyx1QkE0QkNDLE9BNUJELEVBNEJVO0FBQ2pCLFNBQUtuQixZQUFMLENBQWtCb0IsSUFBbEIsQ0FBdUJOLElBQUksQ0FBQ08sU0FBTCxDQUFlRixPQUFmLENBQXZCO0FBQ0g7QUE5QlUsQ0FBZiIsImZpbGUiOiIuL3NyYy9qcy93ZWJTb2NrZXQuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCB7XG4gICAgb25NZXNzYWdlOiBudWxsLFxuICAgIGZhbGxiYWNrOiBudWxsLFxuICAgIHJlZnJlc2hEb206IG51bGwsXG5cbiAgICBpbml0KCkge1xuICAgICAgICB0aGlzLndzQ29ubmVjdGlvbiA9IG5ldyBXZWJTb2NrZXQoYHdzOi8vJHt3aW5kb3cubG9jYXRpb24uaG9zdG5hbWV9OjYwMDFgKTtcblxuICAgICAgICB0aGlzLndzQ29ubmVjdGlvbi5vbm9wZW4gPSAoKSA9PiB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZygnU3VjY2Vzc2Z1bGx5IGNvbm5lY3RlZCB0byB3ZWJzb2NrZXQgc2VydmVyJylcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMud3NDb25uZWN0aW9uLm9uZXJyb3IgPSBlID0+IHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignQ2FuXFwndCBjb25uZWN0IHRvIHdlYnNvY2tldCBzZXJ2ZXInKVxuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy53c0Nvbm5lY3Rpb24ub25jbG9zZSA9ICgpID0+IHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignTG9zdCB3ZWJzb2NrZXQgY29ubmVjdGlvbicpXG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLndzQ29ubmVjdGlvbi5vbm1lc3NhZ2UgPSBlID0+IHtcbiAgICAgICAgICAgIHRoaXMub25NZXNzYWdlLmNhbGwodGhpcywgSlNPTi5wYXJzZShlLmRhdGEpKVxuICAgICAgICB9XG4gICAgfSxcblxuICAgIHdpcmVVcCgpIHtcbiAgICB9LFxuXG4gICAgc2VuZE1lc3NhZ2UocGF5bG9hZCkge1xuICAgICAgICB0aGlzLndzQ29ubmVjdGlvbi5zZW5kKEpTT04uc3RyaW5naWZ5KHBheWxvYWQpKVxuICAgIH1cbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/js/webSocket.js\n");

/***/ }),

/***/ 0:
/*!*******************************!*\
  !*** multi ./src/js/index.js ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! /Users/calebporzio/Documents/Code/sites/livewire/src/js/index.js */"./src/js/index.js");


/***/ })

/******/ });
});